{"version":3,"file":"player5.min.js","mappings":"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","sources":["webpack://Player5/webpack/universalModuleDefinition","webpack://Player5/./src/audio/index.js","webpack://Player5/./src/audio/playlist.js","webpack://Player5/./src/audio/sortlist.js","webpack://Player5/./src/audio/state.js","webpack://Player5/./src/audio/story.js","webpack://Player5/./src/audio/subtitle.js","webpack://Player5/./src/audio/volume.js","webpack://Player5/./src/audio/word.js","webpack://Player5/./src/elements/content.js","webpack://Player5/./src/elements/control.js","webpack://Player5/./src/elements/effect.js","webpack://Player5/./src/elements/index.js","webpack://Player5/./src/elements/init.js","webpack://Player5/./src/elements/meta.js","webpack://Player5/./src/elements/playlist.js","webpack://Player5/./src/elements/progress.js","webpack://Player5/./src/elements/sortlist.js","webpack://Player5/./src/elements/story.js","webpack://Player5/./src/elements/subtitle.js","webpack://Player5/./src/elements/time.js","webpack://Player5/./src/elements/word.js","webpack://Player5/./src/event/canplaythrough.js","webpack://Player5/./src/event/elements/assistant.js","webpack://Player5/./src/event/elements/foot.js","webpack://Player5/./src/event/elements/play.js","webpack://Player5/./src/event/elements/playlist.js","webpack://Player5/./src/event/elements/slider.js","webpack://Player5/./src/event/elements/sortlist.js","webpack://Player5/./src/event/elements/subtitle.js","webpack://Player5/./src/event/elements/tabs.js","webpack://Player5/./src/event/elements/volume.js","webpack://Player5/./src/event/ended.js","webpack://Player5/./src/event/fn/loop.js","webpack://Player5/./src/event/fn/sync.js","webpack://Player5/./src/event/index.js","webpack://Player5/./src/event/progress.js","webpack://Player5/./src/event/timeupdate.js","webpack://Player5/./src/player5.js","webpack://Player5/./src/tools/elm.js","webpack://Player5/./src/tools/shuffle.js","webpack://Player5/./src/tools/time.js","webpack://Player5/webpack/bootstrap","webpack://Player5/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Player5\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Player5\"] = factory();\n\telse\n\t\troot[\"Player5\"] = factory();\n})(self, () => {\nreturn ","import { \n  //wave_build, \n  sync_playart, \n  load_playart\n} from \"../elements/effect\";\nimport { sync_control } from \"../elements/control\";\nimport { sync_meta } from \"../elements/meta\";\nimport { sync_playlist } from \"../elements/playlist\";\nimport State from \"./state\";\nimport subtitle from \"./subtitle\";\nimport word from \"./word\";\nimport story from \"./story\";\n\nexport const audio = new Audio();\n\nexport const context = new AudioContext();\n\nexport function load(item) {\n  const srcAudio = item.url;\n  audio.src = srcAudio;\n  audio.load();\n  subtitle(item.subtitle);\n  story(item.story);\n  word(item.word);\n  sync_meta(item);\n  //wave_build(srcAudio).then(() => {\n  //  console.log('wave build completly');\n  //});\n}\n\nexport function locate(item) {\n  subtitle(item.subtitle);\n  story(item.story);\n  word(item.word);\n}\n\nexport function play() {\n  //audio.play().then(() => {\n  //  sync_playart(true);\n  //  sync_control(true);\n  //  sync_playlist(true);\n  //  State.control.playing = true;\n  //});\n  audio.play();\n  sync_playart(true);\n  sync_control(true);\n  sync_playlist(true);\n  State.control.playing = true;\n}\n\nexport function pause() {\n  const list = State.playlist.value;\n  const index = State.playlist.index;\n  const item = list[index];\n  audio.pause();\n  sync_playart(false);\n  sync_control(false);\n  sync_playlist(false);\n  load_playart(item);\n  State.control.playing = false;\n}\n\n\n\n","import event_playlist from \"../event/elements/playlist\"\nimport { build_playlist } from \"../elements/playlist\";\nimport { sync_volume } from \"../elements/control\";\nimport { load } from \"./\";\nimport State from \"./state\";\n\nexport function load_default(index) {\n  const playlist = State.playlist.value;\n  const current = index === undefined ? State.playlist.index : index;\n  const item = playlist[current];\n\n  load(item);\n}\n\nexport async function init_playlist(url) {\n  const response = await fetch(url);\n  const json = await response.json();\n  State.playlist.value = json.playlist;\n  build_playlist(json.playlist);\n  event_playlist();\n  load_default();\n}\n\nexport function shuffle() {\n\n}\n\nexport function next() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    const next = index + 1;\n    const i = next > length - 1 ? 0 : next;\n    return shuffle[i];\n  } else {\n    const next = current + 1;\n    const i = next > length - 1 ? 0 : next;\n    return i;\n  }\n}\n\nexport function prev() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    const prev = index - 1;\n    const i = prev > - 1 ? prev : length - 1;\n    return shuffle[i];\n  } else {\n    const prev = current - 1;\n    const i = prev > - 1 ? prev : length - 1;\n    return i;\n  }\n}\n\nexport function is_last() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    return index === length - 1;\n  } else {\n    return current === length - 1;\n  }\n}\n\nexport function is_first() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    return index === 0;\n  } else {\n    return current === 0;\n  }\n}\n\n","import { build_sortlist } from \"../elements/sortlist\";\n\nexport async function init_sortlist(url) {\n  const response = await fetch(url);\n  const json = await response.json();\n  await build_sortlist(json);\n}\n","module.exports = {\n  control: {\n    playing: false,\n    muted: false,\n    volume: 1.0,\n    loop: {\n      list: {\n        flag: false\n      },\n      whole: {\n        flag: false,\n        start: -1,\n        end: -1\n      },\n      part: {\n        flag: false,\n        start: -1,\n        end: -1\n      }\n    } \n  },\n  audio: {\n    duration: 0,\n    subtitle: {\n      click: false,\n      list: [],\n      current: -1\n    } \n  },\n  effect: {\n    sample: {\n      rate: 50\n    }\n  },\n  playlist: {\n    index: 0,\n    shuffle: [],\n    value: []\n  }\n}\n\n","import Elms from \"../elements/\";\nimport { build_story } from \"../elements/story\";\n\nexport default async function(storyParam) {\n  const elmStory = Elms.content.story;\n  elmStory.innerHTML = '';\n\n  if (!storyParam) return;\n  const url = storyParam.path + storyParam.name\n  if (!url) return;\n\n  const res = await fetch(url);\n  const text = await res.text();\n  build_story(text);\n}\n","import event_subtitle from \"../event/elements/subtitle\";\nimport {\n  sync_current, \n  build_subtitle\n} from \"../elements/subtitle\";\nimport State from \"./state\";\n\nfunction millisecond(hmsms) {\n  const [h, m, s, ms] = hmsms.split(/[:,]/);\n  return ((+h*60*60) + (+m*60) + (+s)) * 1000 + (+ms);\n}\n\nfunction extract(lines) {\n  const subtitles = [];\n  let subtitle = {};\n\n  lines.forEach((line, index) => {\n    if (!line.trim().length) return;\n    if (Number.isInteger(+line)) {\n      subtitle = {};\n      subtitle.index = +line;\n      return;\n    }\n    if (!subtitle.startTime) {\n      const [startTime, endTime] = line.split(' --> ');\n      subtitle.startTime = millisecond(startTime);\n      subtitle.endTime = millisecond(endTime);\n      return \n    } \n\n    if (subtitle.text) {\n      subtitle.text = (subtitle.text || '') + '<br>' + line;\n      return;\n    } else {\n      subtitle.text = line;\n    }\n    subtitles.push(subtitle);\n  });\n  return subtitles;\n}\n\nexport default async function(url) {\n  if (!url) {\n    build_subtitle([]);\n    State.audio.subtitle.list = [];\n    return;\n  }\n  const res = await fetch(url);\n  const text = await res.text();\n  const raw_lines = text.split(/\\r?\\n/);\n  const txt_lines = extract(raw_lines);\n  build_subtitle(txt_lines);\n  State.audio.subtitle.list = txt_lines;\n  event_subtitle();\n}\n\nexport function current(index) {\n  if (State.audio.subtitle.current !== index) {\n    State.audio.subtitle.current = index;\n    sync_current(index);\n  }\n}\n\nexport function reset() {\n  State.audio.subtitle.current = -1;\n  State.audio.subtitle.list = [];\n}\n\nexport function recover() {\n  State.audio.subtitle.current = -1;\n}\n","import { sync_volume } from \"../elements/control\";\nimport { audio } from \"./\";\nimport State from \"./state\";\n\nexport function init_volume(options) {\n  const value = State.control.volume;\n  const muted = State.control.muted;\n\n  if (muted) {\n    audio.volume = 0;\n  } else {\n    audio.volume = value;\n    sync_volume(value);\n  }\n}\n","import Elms from \"../elements/\";\nimport { build_wordlist } from \"../elements/word\";\n\nexport default async function(wordParam) {\n  const elmWord = Elms.content.word;\n  elmWord.innerHTML = '';\n\n  if (!wordParam) return;\n  const url = wordParam.path + wordParam.name\n  if (!url) return;\n\n  const res = await fetch(url);\n  const json = await res.json();\n  build_wordlist(json, wordParam);\n}\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_content() {\n  const rootElm = Elms.content.root;\n  Elms.content.sortlist = get_elm('sortlist', rootElm);\n  Elms.content.playlist = get_elm('playlist', rootElm);\n  Elms.content.essay = get_elm('essay', rootElm);\n  Elms.content.word = get_elm('words', rootElm);\n  Elms.content.story = get_elm('story', rootElm);\n}\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_control() {\n  Elms.control.root = get_elm('control-container');\n  Elms.control.play = get_elm('switch');\n  Elms.control.volume.slider = get_elm('volume-slider');\n  Elms.control.volume.icon = get_elm('volume-icon');\n}\n\nexport function sync_control(playing) {\n  const elmSwitch = Elms.control.play;\n  if (playing) {\n    elmSwitch.classList.remove('paused');\n    elmSwitch.classList.add('play');\n  } else {\n    elmSwitch.classList.remove('play');\n    elmSwitch.classList.add('paused');\n  }\n}\n\nexport function sync_volume(val) {\n  const elmSlider = Elms.control.volume.slider;\n  const elmIcon = Elms.control.volume.icon;\n  const value = parseFloat(val);\n  if (value === 0) {\n    elmIcon.classList.add('muted');\n  } else {\n    elmIcon.classList.remove('muted');\n  }\n  elmSlider.value = value * 100;\n}\n","import { get_elm } from \"../tools/elm\";\nimport { context } from \"../audio/\";\nimport State from \"../audio/state\";\nimport Elms from \"./\";\n\nfunction get_peaks(length, buffer) {\n  /*\n    Set the parameters needed to build the SVG.\n  */\n  const sampleSize = buffer.length / length;\n  const sampleStep = ~~(sampleSize / 10) || 1;\n  const numberOfChannels = buffer.numberOfChannels;\n  const mergedPeaks = [];\n\n  /*\n    Iterate over the channels and find the peaks.\n  */\n  for (\n    let channelNumber = 0;\n    channelNumber < numberOfChannels;\n    channelNumber++\n  ) {\n    /*\n      Initialize the peaks array and set the channel data to what\n      the buffer has in its channel data.\n    */\n    const peaks = [];\n    const channelData = buffer.getChannelData(channelNumber);\n\n    /*\n      Iterate over peaks with respect to the sample size.\n    */\n    for (let peakNumber = 0; peakNumber < length; peakNumber++) {\n      /*\n        Get the start and end peak.\n      */\n      const start = ~~(peakNumber * sampleSize);\n      const end = ~~(start + sampleSize);\n\n      /*\n        Set min and max to the channel data first peak.\n      */\n      let min = channelData[0];\n      let max = channelData[0];\n\n      /*\n        Iterate over the parts of the song starting to the\n        ending to display the waveform.\n      */\n      for (\n        let sampleIndex = start;\n        sampleIndex < end;\n        sampleIndex += sampleStep\n      ) {\n        const value = channelData[sampleIndex];\n\n        if (value > max) {\n          max = value;\n        }\n        if (value < min) {\n          min = value;\n        }\n      }\n\n      /*\n        Set the max and min for the peak.\n      */\n      peaks[2 * peakNumber] = max;\n      peaks[2 * peakNumber + 1] = min;\n\n      /*\n        Merge the peaks\n      */\n      if (channelNumber === 0 || max > mergedPeaks[2 * peakNumber]) {\n        mergedPeaks[2 * peakNumber] = max;\n      }\n\n      if (channelNumber === 0 || min < mergedPeaks[2 * peakNumber + 1]) {\n        mergedPeaks[2 * peakNumber + 1] = min;\n      }\n    }\n  }\n\n  /*\n    Returns the merged peaks.\n  */\n  return mergedPeaks;\n}\n\nfunction build_path(peaks) {\n  /*\n    Get the total peaks in the song.\n  */\n  const totalPeaks = peaks.length;\n\n  /*\n    Figure out the depth of the peak.\n  */\n  let d = \"\";\n  for (let peakNumber = 0; peakNumber < totalPeaks; peakNumber++) {\n    if (peakNumber % 2 === 0) {\n      d += ` M${~~(peakNumber / 2)}, ${peaks.shift()}`;\n    } else {\n      d += ` L${~~(peakNumber / 2)}, ${peaks.shift()}`;\n    }\n  }\n\n  return d;\n}\n\nexport function init_effect() {\n  Elms.effect.visualizer = get_elm('audio-visualizer');\n  Elms.effect.wave = get_elm('wave-form');\n  Elms.effect.playart = get_elm('workart-wrapper');\n}\n\nexport function sync_effect() {\n  const elmWave = Elms.effect.wave;\n  const sampleRate = State.effect.sample.rate;\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('viewBox', '0 -1 ' + sampleRate + ' 2');\n  svg.setAttribute('preserveAspectRatio', 'none');\n  const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  svg.appendChild(g);\n  const path = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'path'\n  );\n  path.setAttribute('d', '');\n  g.appendChild(path);\n  elmWave.innerHTML = '';\n  elmWave.appendChild(svg);\n}\n\nexport function wave_build(url) {\n  const elmWave = Elms.effect.wave;\n  const elmPath = elmWave.querySelector('svg g path');\n  elmPath && elmPath.setAttribute('d', '');\n  return new Promise((resolve, reject) => {\n    const elmWave = Elms.effect.wave;\n    const sampleRate = State.effect.sample.rate;\n    fetch(url)\n    .then(response => response.arrayBuffer())\n    .then(arrayBuffer => {\n      context.decodeAudioData(arrayBuffer, function(bufferedAudio) {\n        const peaks = get_peaks(sampleRate, bufferedAudio);\n        const path = build_path(peaks);\n        const elmPath = elmWave.querySelector('svg g path');\n        elmPath.setAttribute('d', path);\n        resolve();\n      }); \n    });\n  });\n  /*\n  jsmediatags.read(url, {\n    onSuccess: function(tag) {\n      console.log(tag.tags);\n    }\n  });\n  */\n}\n\nexport function sync_playart(playing) {\n  const elmPlayart = Elms.effect.playart;\n  if (playing) {\n    elmPlayart.classList.add('hide');\n  } else {\n    elmPlayart.classList.remove('hide');\n  }\n}\n\nexport function load_playart(item) {\n  const elmPlayart = Elms.effect.playart;\n  const elmCover = get_elm('workart', elmPlayart);\n  if (!item || !item.artwork) {\n    elmCover.style.backgroundImage = '';\n    return; \n  }\n  elmCover.style.backgroundImage = `url(${ item.artwork })`;\n}\n","module.exports = {\n  root: null,\n  control: {\n    play: null,\n    volume: {\n      slider: null,\n      icon: null\n    },\n    root: null\n  },\n  time: {\n    current: null,\n    duration: null\n  },\n  progress: {\n    buffered: null,\n    played: null,\n    track: null\n  },\n  effect: {\n    visualizer: null,\n    wave: null,\n    playart: null\n  },\n  content: {\n    root: null,\n    tabs: null,\n    sortlist: null,\n    playlist: null,\n    essay: null,\n    word: null,\n    story: null\n  },\n  meta: {\n    root: null\n  }\n}\n\n","import { init_progress } from \"./progress\";\nimport { init_control } from \"./control\";\nimport { init_time } from \"./time\";\nimport { init_effect } from \"./effect\";\nimport { init_content } from \"./content\";\nimport { init_meta } from \"./meta\";\nimport Elms from \"./\";\n\nexport default function(options) {\n  const rootElm = options.playerWrapperElm;\n  const contentElm = options.contentElm;\n  const essayElm = options.essayElm;\n  Elms.root = rootElm; \n  Elms.content.root = options.contentElm;\n\n  init_progress();\n  init_control();\n  init_time();\n  init_effect();\n  init_content();\n  init_meta();\n}\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_meta() {\n  Elms.meta.root = get_elm('meta-container');\n}\n\nexport function sync_meta(item) {\n  const elmMeta = Elms.meta.root;\n  const elmName = get_elm('audio-name', elmMeta);\n  const elmArtist = get_elm('audio-artist', elmMeta);\n  const elmAlbum = get_elm('audio-album', elmMeta);\n  elmName.innerText = item.title || '';\n  elmArtist.innerText = item.artist || '';\n  elmAlbum.innerText = item.album || '';\n}\n","import State from \"../audio/state\";\nimport Elms from \"../elements/\";\n\nfunction template_line(o, i) {\n  return '' +\n  `<div class=\"line\" data-i=\"${ i }\">\n    <div class=\"action\">\n      <div><div class=\"play-it\"></div></div>\n      <div><div class=\"loop-it\"></div></div>\n      <div><div class=\"locate-it\"></div></div>\n    </div>\n    <div class=\"content\">${ o.title }</div>\n    <div class=\"audio-duration\">\n      <span>${ o.duration }</span>\n    </div>\n  </div>`;\n}\n\nfunction template_list(template) {\n  return `<div id=\"playlist\"><div class=\"lines\">${ template }</div></div>`;\n}\n\nexport function build_playlist(playlist) {\n  const elmList = Elms.content.playlist;\n  const template = playlist.map((line, i)=> template_line(line, i)).join('');\n  elmList.innerHTML = template_list(template);\n}\n\nexport function sync_playlist(playing) {\n  const elmList = Elms.content.playlist;\n  if (!playing) {\n    const elmCurrent = elmList.querySelector('.current');\n    const elmIcon = elmCurrent.querySelector('.action > div > div');\n    elmIcon.classList.remove('playing');\n    elmIcon.classList.add('play-it');\n    return;\n  }\n\n  const elmLines = elmList.querySelectorAll('.line');\n  const current = State.playlist.index;\n  for (const line of elmLines) {\n    const elmPlay = line.querySelector('.action > div > div');\n    const elmLoop = line.querySelector('.action .loop-it');\n    const index = parseInt(line.dataset.i);\n    if (index === current) {\n      line.classList.add('current');\n      elmPlay.classList.remove('play-it');\n      elmPlay.classList.add('playing');\n    } else {\n      line.classList.remove('current');\n      elmPlay.classList.remove('playing');\n      elmPlay.classList.add('play-it');\n      elmLoop.classList.remove('on');\n    }\n  }\n}\n\nexport function at_playlist() {\n  const elmList = Elms.content.playlist;\n  const elmLines = elmList.querySelectorAll('.line');\n  const current = State.playlist.index;\n  for (const line of elmLines) {\n    const index = parseInt(line.dataset.i);\n    if (index === current) {\n      line.classList.add('current');\n    } else {\n      line.classList.remove('current');\n    }\n  }\n}\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_progress() {\n  Elms.progress.buffered = get_elm('buffered-progress');\n  Elms.progress.played = get_elm('played-progress');\n  Elms.progress.track = get_elm('progress-slider');\n}\n\nexport function sync_progress_buffered(buffered, duration) {\n  const elmBuffered = Elms.progress.buffered;\n  elmBuffered.value = parseFloat(buffered / duration);\n}\n\nexport function sync_progress_played(current, duration) {\n  const elmPlayed = Elms.progress.played;\n  const elmTrack = Elms.progress.track;\n  const max = elmPlayed.max;\n  const value = (current / duration) * max;\n  elmPlayed.value = value;\n  elmTrack.value = value * 100;\n}\n","import Elms from \"../elements/\";\nimport event_sortlist from \"../event/elements/sortlist\"\n\nfunction template_item(item, i) {\n  return '' +\n  `<div class=\"level_1\" data-path=\"${ item.path }\">\n    <a href=\"#\">${ item.name }</a>\n  </div>`;\n}\n\nfunction template_sort(sort, i) {\n  const template = sort.list.map((v, i) => template_item(v, i)).join('');\n  return '' +\n  `<div class=\"level_2\">\n    <div class=\"level_1\">\n      <a href=\"javascript:;\">${ sort.category }</a>\n    </div>\n    ${ template }\n  </div>`;\n}\n\nfunction template_list(template) {\n  return `<div id=\"sortlist\">${ template }</div>`;\n}\n\nexport function build_sortlist(sortlist) {\n  const elmList = Elms.content.sortlist;\n  const template = sortlist.map((sort, i)=> template_sort(sort, i)).join('');\n  elmList.innerHTML = template_list(template);\n  event_sortlist();\n}\n","import Elms from \"../elements/\";\n\nexport function build_story(template) {\n  const elmWord = Elms.content.story;\n  elmWord.innerHTML = template; \n}\n","import { get_elm } from \"../tools/elm\";\nimport { current } from \"../audio/subtitle\";\nimport State from \"../audio/state\";\nimport Elms from \"./\";\n\nexport function sync_subtitle(currentTime) {\n  const loop = State.control.loop.part.flag;\n  if (loop) {\n    return;\n  }\n\n  const elmEssay = Elms.content.essay;\n  if (!elmEssay) {\n    return;\n  }\n\n  const lines = State.audio.subtitle.list;\n  if (!(lines && lines.length)) {\n    return;\n  }\n\n  currentTime = currentTime * 1000;\n  for (let i=0; i<lines.length; i++) {\n    if (currentTime > lines[i].startTime && currentTime < lines[i].endTime) {\n      current(i);\n      break;\n    }\n  }\n}\n\nexport function sync_current(index) {\n  if (index === -1) return;\n\n  const click = State.audio.subtitle.click;\n  if (click) {\n    State.audio.subtitle.click = false;\n    return;\n  }\n\n  const elmEssay = Elms.content.essay;\n  const elmLines = elmEssay.querySelectorAll('.line');\n  const lines = State.audio.subtitle.list;\n  const line = lines[index];\n  const i = parseInt(line.index) - 1;\n  const elmCurrent = elmEssay.querySelector('.line[data-i=\"' + i + '\"]');\n\n  const elmPlay = elmEssay.querySelectorAll('.play-this');\n  elmPlay.forEach(elm => elm.classList.remove('on'));\n\n  elmLines.forEach(elm => elm.classList.remove('current'));\n  elmCurrent.classList.add('current');\n\n  //const top = elmCurrent.offsetTop;\n  //const viewHeight = elmEssay.clientHeight;\n  //elmEssay.scrollTo({\n  //  behavior: 'smooth',\n  //  left: 0,\n  //  top: top - viewHeight/2\n  //});\n\n  console.log(line);\n}\n\nfunction template_line(line, i) {\n  return '' +\n  `<div class=\"line\" data-i=\"${ i }\">\n    <div class=\"action\">\n      <div><div class=\"play-this\"></div></div>\n      <div><div class=\"loop-this\"></div></div>\n    </div>\n    <div class=\"content\">\n      ${ line.text }\n    </div>\n    <div class=\"audio-duration\">\n      <span>${ Math.round(((line.endTime - line.startTime) / 1000) * 10) / 10 }</span>\n    </div>\n  </div>`\n}\n\nfunction template_essay(template) {\n  return `<div id=\"essay\"><div class=\"lines\">${ template }</div></div>`;\n}\n\nexport function build_subtitle(lines) {\n  const elmEssay = Elms.content.essay;\n  const template = lines.map((line, i) => template_line(line, i)).join('');\n  elmEssay.innerHTML = template_essay(template);\n}\n\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_time() {\n  Elms.time.current = get_elm('current-time');\n  Elms.time.duration = get_elm('duration-time');\n}\n\nexport function sync_time(current, duration) {\n  const elmCurrent = Elms.time.current;\n  const elmDuration = Elms.time.duration;\n\n  const [cH, cM, cS] = current;\n  const [dH, dM, dS] = duration;\n\n  if ('00' == cH) {\n    elmCurrent.innerHTML = `<span>${cM}<span>:<span>${cS}</span>`;\n  } else {\n    elmCurrent.innerHTML = `<span>${cH}<span>:<span>${cM}</span>:<span>${cS}</span>`;\n  }\n\n  if ('00' == dH) {\n    elmDuration.innerHTML = `<span>${dM}<span>:<span>${dS}</span>`;\n  } else {\n    elmDuration.innerHTML = `<span>${dH}<span>:<span>${dM}</span>:<span>${dS}</span>`;\n  }\n}","import Elms from \"../elements/\";\n\nfunction template_word(wordParam, firstChild, item, i) {\n  return '' +\n  `<div class=\"media\">\n    <figure class=\"media-left\">\n      <p class=\"image word\">\n        <img src=\"${ wordParam.path + wordParam.dir + '/' + item[3] }.jpg\">\n      </p>\n    </figure>\n    <div class=\"media-content\">\n      <div class=\"content\">\n        <p>\n          <strong>${ firstChild[0] }</strong> <span>${ firstChild[1] }</span> <small>${ firstChild[2] || '' }</small>\n        </p>\n        <p>${ item[1] }</p>\n        <p>${ item[2] }</p>\n      </div>\n    </div>\n  </div>`;\n}\n\nfunction template_list(template) {\n  return `<div id=\"words\"><div class=\"words\">${ template }</div></div>`;\n}\n\nexport function build_wordlist(wordlist, wordParam) {\n  const elmWord = Elms.content.word;\n  const template = wordlist.map((item, i)=> template_word(wordParam, item[0].split(' '), item, i)).join('');\n  elmWord.innerHTML = template_list(template);\n}\n","import { sync_volume } from \"../elements/control\";\nimport { sync_effect } from \"../elements/effect\";\n\nexport default function(audio) {\n  audio.addEventListener('canplaythrough', async function() {\n    sync_volume();\n    //sync_effect();\n  }, { once: true });\n}\n","import Elms from \"../../elements/\";\nimport State from \"../../audio/state\";\n\nfunction handleHorizonal(signum) {\n  const elmContent = Elms.content.root;\n  const elmTabs = elmContent.querySelectorAll('.tabs li');\n  const elmCurrent = elmContent.querySelector('.tabs li.on');\n  const length = parseInt(elmTabs.length);\n  const index = parseInt(elmCurrent.dataset.index);\n\n  let next = index + 1*signum;\n  if (next > length - 1) {\n    next = next % length;\n  } \n  if (next < 0) {\n    next = length + next;\n  }\n  elmTabs[next].click();\n}\n\nfunction handleVertical(signum) {\n  const elmList = Elms.content.playlist;\n  const elmLines = elmList.querySelectorAll('.line');\n  const playing = State.control.playing;\n  const current = State.playlist.index;\n  const length = parseInt(elmLines.length);\n\n  let next = current + 1*signum;\n  if (next > length - 1) {\n    next = next % length;\n  } \n  if (next < 0) {\n    next = length + next;\n  }\n\n  const elmLine = elmLines.item(next);\n  if (playing) {\n    const elmPlay = elmLine.querySelector('.action > div > div');\n    elmPlay.click();\n  } else {\n    const elmLocate = elmLine.querySelector('.action .locate-it');\n    elmLocate.click();\n  }\n};\n\nexport default function() {\n  const elmShortcut = document.querySelector('#shortcut');\n  const elmLeft = elmShortcut.querySelector('#i-mid-left > div');\n  const elmRight = elmShortcut.querySelector('#i-mid-right > div');\n  const elmMid = elmShortcut.querySelector('#i-mid-center > div');\n  const elmDown = elmShortcut.querySelector('#i-down-mid > div');\n  const elmUp = elmShortcut.querySelector('#i-up-mid > div');\n\n  elmLeft.addEventListener('click', function() {\n    handleHorizonal(-1);\n  });\n  elmRight.addEventListener('click', function() {\n    handleHorizonal(1);\n  });\n  elmMid.addEventListener('click', function() {\n    elmShortcut.classList.add('hide');\n  });\n  elmDown.addEventListener('click', function() {\n    handleVertical(1);\n  });\n  elmUp.addEventListener('click', function() {\n    handleVertical(-1);\n  });\n}\n","export default function() {\n  const elmFoot = document.querySelector('#foot');\n  elmFoot.addEventListener('dblclick', function() {\n    const elmShortcut = document.querySelector('#shortcut');\n    if (elmShortcut.classList.contains('hide')) {\n      elmShortcut.classList.remove('hide');\n    } else {\n      elmShortcut.classList.add('hide');\n    }\n  });\n}\n","import { get_elm } from \"../../tools/elm\";\nimport { next, prev, load_default } from \"../../audio/playlist\";\nimport { play, pause, load } from \"../../audio/\";\nimport shuffle from \"../../tools/shuffle\";\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmRoot = Elms.control.root;\n  const elmPlay = Elms.control.play;\n  const elmLoop = get_elm('mode-repeat', elmRoot);\n  const elmShuffle = get_elm('mode-shuffle', elmRoot);\n  const elmNext = get_elm('next', elmRoot);\n  const elmPrev = get_elm('prev', elmRoot);\n  elmPlay.addEventListener('click', function() {\n    if (State.control.playing) {\n      pause();\n    } else {\n      play();\n    }\n  });\n  elmLoop.addEventListener('click', function() {\n    const isLoop = State.control.loop.list.flag;\n    if (isLoop) {\n      State.control.loop.list.flag = false;\n      this.classList.remove('on');\n      this.classList.add('off');\n    } else {\n      State.control.loop.list.flag = true;\n      this.classList.remove('off');\n      this.classList.add('on');\n    }\n  });\n  elmShuffle.addEventListener('click', function() {\n    const isShuffle = State.playlist.shuffle.length;\n    if (isShuffle) {\n      State.playlist.shuffle = [];\n      this.classList.remove('on');\n      this.classList.add('off');\n    } else {\n      const isPlaying = State.control.playing;\n      if (isPlaying) {\n        State.playlist.shuffle = shuffle();\n        this.classList.remove('off');\n        this.classList.add('on');\n      } else {\n        State.playlist.shuffle = shuffle();\n        this.classList.remove('off');\n        this.classList.add('on');\n        const i = State.playlist.shuffle[0];\n        State.playlist.index = i;\n        load_default(i);\n      }\n    }\n  });\n  elmNext.addEventListener('click', function() {\n    const playlist = State.playlist.value;\n    const index = next();\n    const item = playlist[index];\n    load(item);\n    State.playlist.index = index;\n    play();\n  });\n  elmPrev.addEventListener('click', function() {\n    const playlist = State.playlist.value;\n    const index = prev();\n    const item = playlist[index];\n    load(item);\n    State.playlist.index = index;\n    play();\n  });\n}\n","import { audio, play, pause, load, locate } from \"../../audio/\"\nimport { at_playlist } from \"../../elements/playlist\";\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmList = Elms.content.playlist;\n  const elmLines = elmList.querySelectorAll('.line');\n  const playlist = State.playlist.value;\n  for (const line of elmLines) {\n    const index = parseInt(line.dataset.i);\n    const elmPlay = line.querySelector('.action > div > div');\n    const elmLoop = line.querySelector('.action .loop-it');\n    const elmLocate = line.querySelector('.action .locate-it');\n    elmPlay.addEventListener('click', function() {\n      const playing = State.control.playing;\n      const current = State.playlist.index;\n      if (index === current) {\n        if (playing) {\n          pause();\n        } else {\n          if (audio.src) {\n            play();\n          } else {\n            const item = playlist[index];\n            load(item);\n            play();\n          }\n        }\n      } else {\n        const item = playlist[index];\n        load(item);\n        State.playlist.index = index;\n        play();\n        State.control.loop.whole.flag = false;\n      }\n      localStorage.setItem('playlist', index);\n    });\n    elmLoop.addEventListener('click', function() {\n      const looping = State.control.loop.whole.flag;\n      const current = State.playlist.index;\n      const playing = State.control.playing;\n      if (index === current) {\n        if (!playing) {\n          play();\n        }\n        if (looping) {\n          this.classList.remove('on');\n          State.control.loop.whole.flag = false;\n        } else {\n          this.classList.add('on');\n          State.control.loop.whole.flag = true;\n        }\n      } else {\n        const item = playlist[index];\n        load(item);\n        State.playlist.index = index;\n        this.classList.add('on');\n        State.control.loop.whole.flag = true;\n        play();\n      }\n      localStorage.setItem('playlist', index);\n    });\n    elmLocate.addEventListener('click', function() {\n      const playing = State.control.playing;\n      const current = State.playlist.index;\n      if (index !== current) {\n        if (playing) {\n          pause();\n        }\n        audio.removeAttribute('src');\n        const item = playlist[index];\n        locate(item);\n        State.playlist.index = index;\n        at_playlist(true); \n        State.control.loop.whole.flag = false;\n      }\n      localStorage.setItem('playlist', index);\n    });\n  }\n\n  const playlistIndex = localStorage.getItem('playlist');\n  const playlistInt = parseInt(playlistIndex);\n  if (playlistInt !== null) {\n    const elmLine = elmLines.item(playlistInt);\n    const elmLocate = elmLine.querySelector('.action .locate-it');\n    elmLocate.click();\n  }\n}\n","import { sync_area_time } from \"../fn/sync\";\nimport { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmTrack = Elms.progress.track;\n  elmTrack.addEventListener('input', function() {\n    const timeStart = State.audio.duration * (this.value / 100);\n    audio.currentTime = timeStart;\n    sync_area_time(timeStart);\n  });\n}\n","import { init_playlist } from \"../../audio/playlist\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmContent = Elms.content.root;\n  const elmTabs = elmContent.querySelectorAll('.tabs li');\n  const elmList = Elms.content.sortlist;\n  const elmLines = elmList.querySelectorAll('.level_1:not(:first-child)');\n  elmLines.forEach((elmItem, index)=> {\n    elmItem.addEventListener('click', async function(e) {\n      e.preventDefault();\n      if (this.classList.contains('on')) return;\n\n      await handleClick(this);\n      elmTabs.item(1).click();\n      localStorage.setItem('sort', index);\n    });\n  });\n\n  const sortIndex = localStorage.getItem('sort');\n  const sortInt = parseInt(sortIndex);\n  if (sortIndex === null) {\n    const elmLine = elmLines.item(0);\n    handleClick(elmLine);\n  } else {\n    const elmLine = elmLines.item(sortInt);\n    handleClick(elmLine);\n  }\n}\n\nasync function handleClick(that) {\n  const elmList = Elms.content.sortlist;\n  const elmLines = elmList.querySelectorAll('.level_1:not(:first-child)');\n  const path = that.dataset.path;\n  await init_playlist(path);\n  elmLines.forEach(v => v.classList.remove('on'));\n  that.classList.add('on');\n}\n","import { sync_area_time } from \"../fn/sync\";\nimport { audio, play } from \"../../audio/\";\nimport Elms from \"../../elements/\";\nimport State from \"../../audio/state\";\n\nfunction play_at_here(line, isLoop) {\n  const subtitle = State.audio.subtitle.list;\n  const index = parseInt(line.dataset.i);\n  const elmEssay = Elms.content.essay;\n  const item = subtitle[index];\n  const startTime = item.startTime;\n\n  if (State.control.loop.part.flag) {\n    State.control.loop.part.flag = false;\n    State.control.loop.part.start = -1;\n    State.control.loop.part.end = -1;\n  }\n\n  if (isLoop) {\n    const elmIconLoop = line.querySelector('.action .loop-this');\n    if (elmIconLoop.classList.contains('on')) {\n      elmIconLoop.classList.remove('on');\n      return;\n    } else {\n      const endTime = item.endTime;\n      State.control.loop.part.flag = true;\n      State.control.loop.part.start = startTime;\n      State.control.loop.part.end = endTime;\n    }\n  }\n\n  const elmPlay = elmEssay.querySelectorAll('.play-this');\n  const elmLoop = elmEssay.querySelectorAll('.loop-this');\n  const elmLine = elmEssay.querySelectorAll('.line');\n  for (const elm of elmPlay) elm.classList.remove('on');\n  for (const elm of elmLoop) elm.classList.remove('on');\n  for (const elm of elmLine) elm.classList.remove('current');\n  line.classList.add('current');\n\n  if (isLoop) {\n    const elmIconLoop = line.querySelector('.action .loop-this');\n    elmIconLoop.classList.add('on');\n  } else {\n    const elmIconPlay = line.querySelector('.action .play-this');\n    elmIconPlay.classList.add('on');\n    State.audio.subtitle.click = true;\n  }\n\n  audio.currentTime = startTime / 1000;\n  sync_area_time(startTime);\n  if (!State.control.playing) {\n    play();\n  }\n}\n\nexport default function() {\n  const elmEssay = Elms.content.essay;\n  const elmLines = elmEssay.querySelectorAll('.line');\n\n  for (const line of elmLines) {\n    const elmIconPlay = line.querySelector('.action .play-this');\n    const elmIconLoop = line.querySelector('.action .loop-this');\n\n    elmIconPlay.addEventListener('click', function() {\n      play_at_here(line);\n    });\n    elmIconLoop.addEventListener('click', function() {\n      play_at_here(line, 'loop')\n    });\n  }\n}\n","import State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmContent = Elms.content.root;\n  const elmTabs = elmContent.querySelectorAll('.tabs li');\n\n  elmTabs.forEach(elm => {\n    elm.addEventListener('click', function() {\n      if (this.classList.contains('on')) {\n        return;\n      }\n      const index = this.dataset.index;\n      const elmDetails = elmContent.querySelectorAll('.frame .roll');\n      const elmDetail = elmDetails[index];\n      elmTabs.forEach(e => e.classList.remove('on'));\n      this.classList.add('on');\n      elmDetails.forEach(e => e.classList.add('hide'));\n      elmDetail.classList.remove('hide');\n      localStorage.setItem('tab', index);\n    });\n  });\n\n  const tabIndex = localStorage.getItem('tab');\n  const tabInt = parseInt(tabIndex);\n  if (tabInt !== null) {\n    elmTabs.item(tabInt).click();\n  }\n}\n","import { sync_volume } from \"../../elements/control\";\nimport { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmSlider = Elms.control.volume.slider;\n  const elmIcon = Elms.control.volume.icon;\n  elmSlider.addEventListener('input', function() {\n    const value = parseInt(this.value);\n    const volume = value / 100;\n    if (value === 0) {\n      elmIcon.classList.add('muted');\n      State.control.muted = true;\n    } else {\n      elmIcon.classList.remove('muted');\n    }\n    audio.volume = volume;\n    State.control.volume = volume;\n  });\n  elmIcon.addEventListener('click', function() {\n    const muted = State.control.muted;\n    if (muted) {\n      this.classList.remove('muted');\n      State.control.muted = false;\n      const volume = State.control.volume;\n      if (volume > 0) {\n        audio.volume = volume;\n      } else {\n        audio.volume = 0.5;\n        State.control.volume = 0.5;\n        sync_volume(0.5);\n      }\n    } else {\n      this.classList.add('muted');\n      State.control.muted = true;\n      audio.volume = 0;\n    }\n  });\n}\n","import { pause, load, audio, play } from \"../audio/\";\nimport { next, is_last } from \"../audio/playlist\";\nimport State from \"../audio/state\";\n\nexport default function(audio) {\n  audio.addEventListener('ended', function() {\n    const loopList = State.control.loop.list.flag;\n    const loopWhole = State.control.loop.whole.flag;\n    const loopPart = State.control.loop.part.flag;\n    const playlist = State.playlist.value;\n    if (loopPart) return;\n    if (loopWhole) {\n      audio.currentTime = 0;\n      play();\n    } else {\n      const isLast = is_last();\n      if (isLast && !loopList) {\n        pause();\n      } else {\n        const next_index = next();\n        const item = playlist[next_index];\n        load(item);\n        State.playlist.index = next_index;\n        play();\n      }\n    }\n  });\n}\n","import { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\n\nexport function loop_detect() {\n  const current = audio.currentTime;\n  const loop = State.control.loop;\n  const { part } = loop;\n  const { flag, start, end } = part;\n\n  if (flag && -1 !== start && -1 !== end) {\n    if ((current * 1000) > end) {\n      audio.currentTime = start / 1000;\n    }\n  }\n}\n","import {\n  sync_progress_buffered,\n  sync_progress_played\n} from \"../../elements/progress\";\nimport { sync_time } from \"../../elements/time\";\nimport time_format from \"../../tools/time\";\nimport { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\n\nexport function sync_area_time(timeCurrent, timeDuration) {\n  const current = timeCurrent || audio.currentTime;\n  const duration = timeDuration || audio.duration;\n  if (isNaN(current) || isNaN(duration)) {\n    return;\n  }\n  State.audio.duration = duration;\n\n  //time elements\n  const currentTime = time_format(current);\n  const durationTime = time_format(duration);\n  sync_time(currentTime, durationTime);\n\n  //progress buffered elements\n  const last = audio.buffered.length - 1;\n  if (last >= 0) {\n    const buffered = audio.buffered.end(last);\n    sync_progress_buffered(buffered, duration);\n  }\n  sync_progress_played(current, duration);\n}\n","import elm_slider from \"./elements/slider\";\nimport elm_play from \"./elements/play\";\nimport elm_tabs from \"./elements/tabs\";\nimport elm_volume from \"./elements/volume\";\nimport elm_foot from \"./elements/foot\";\nimport elm_assistant from \"./elements/assistant\";\n\nimport canplaythrough from \"./canplaythrough\";\nimport progress from \"./progress\";\nimport timeupdate from \"./timeupdate\";\nimport ended from \"./ended\";\n//import vision from \"./vision\";\nimport { audio } from \"../audio\";\n\nexport default function() {\n  canplaythrough(audio); \n  timeupdate(audio);\n  progress(audio);\n  ended(audio);\n  //vision(audio);\n\n  elm_slider();\n  elm_play();\n  elm_tabs();\n  elm_volume(); \n  elm_foot();\n  elm_assistant();\n}\n\n","import { sync_area_time } from \"./fn/sync\";\n\nexport default function(audio) {\n  audio.addEventListener('progress', function() {\n    sync_area_time();\n  });\n}\n","import { sync_subtitle } from \"../elements/subtitle\";\nimport { sync_area_time } from \"./fn/sync\";\nimport { loop_detect } from \"./fn/loop\";\n\nexport default function(audio) {\n  audio.addEventListener('timeupdate', function() {\n    sync_area_time();\n    sync_subtitle(audio.currentTime);\n    loop_detect();\n  });\n}\n","import init_elements from \"./elements/init\";\nimport init_events from \"./event\";\nimport { init_sortlist } from \"./audio/sortlist\";\nimport { init_volume } from \"./audio/volume\";\nimport Elms from \"./elements/\";\nimport { play, pause } from \"./audio/\";\n\nexport default async function Player5(options) {\n  init_elements(options);\n  init_events();\n  init_volume(); \n  await init_sortlist(options.sortListURL);\n}\n","import Elms from \"../elements/\";\n\nexport function get_elm(term, rootElm) {\n  rootElm = rootElm || Elms.root;\n  return rootElm.querySelector('.' + term)\n}\n","import State from \"../audio/state\";\n\nexport default function() {\n  const playlist = State.playlist.value;\n  const array = playlist.map((_, i) => i);\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  console.log(array);\n  return array;\n}\n","export default function(time) {\n  let seconds = Math.floor(time % 60);\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  let minutes = Math.floor(time / 60);\n  if (minutes < 10) {\n    minutes = '0' + minutes;\n  }\n  let hours = '00';\n  if (minutes >= 60) {\n    hours = Math.floor(minutes / 60);\n    minutes = minutes % 60;\n  }\n  const intHours = parseInt(hours);\n  if (intHours > 0 && intHours < 10) {\n    hours = '0' + hours;\n  }\n  return [hours, minutes, seconds];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(892);\n"],"names":["root","factory","exports","module","define","amd","self","item","srcAudio","url","audio","src","load","subtitle","story","word","sync_meta","list","State","playlist","value","index","pause","sync_playart","sync_control","sync_playlist","load_playart","control","playing","play","Audio","context","AudioContext","current","shuffle","length","isShuffle","indexOf","next","prev","i","load_default","undefined","fetch","response","json","build_playlist","event_playlist","build_sortlist","muted","volume","loop","flag","whole","start","end","part","duration","click","effect","sample","rate","storyParam","Elms","content","innerHTML","path","name","res","text","build_story","sync_current","millisecond","hmsms","split","extract","lines","subtitles","forEach","line","trim","Number","isInteger","startTime","endTime","push","build_subtitle","raw_lines","txt_lines","event_subtitle","options","sync_volume","wordParam","build_wordlist","rootElm","sortlist","get_elm","essay","slider","icon","elmSwitch","classList","remove","add","val","elmSlider","elmIcon","parseFloat","visualizer","wave","playart","elmPlayart","elmCover","artwork","style","backgroundImage","elmWave","sampleRate","svg","document","createElementNS","setAttribute","g","appendChild","elmPath","querySelector","Promise","resolve","reject","then","arrayBuffer","decodeAudioData","bufferedAudio","peaks","totalPeaks","d","peakNumber","shift","build_path","buffer","sampleSize","sampleStep","numberOfChannels","mergedPeaks","channelNumber","channelData","getChannelData","min","max","sampleIndex","get_peaks","time","progress","buffered","played","track","tabs","meta","playerWrapperElm","contentElm","essayElm","init_progress","init_control","init_time","init_effect","init_content","init_meta","elmMeta","elmName","elmArtist","elmAlbum","innerText","title","artist","album","elmLines","querySelectorAll","parseInt","dataset","elmList","template","map","o","template_line","join","template_list","elmPlay","elmLoop","elmPlayed","elmTrack","sort","v","category","template_sort","event_sortlist","elmEssay","Math","round","template_essay","elmCurrent","elm","console","log","currentTime","elmDuration","cH","cM","cS","dH","dM","dS","wordlist","elmWord","firstChild","dir","template_word","addEventListener","once","elmShortcut","elmLeft","elmRight","elmMid","elmDown","elmUp","handleHorizonal","handleVertical","signum","elmContent","elmTabs","elmLine","contains","elmRoot","elmShuffle","elmNext","elmPrev","this","elmLocate","localStorage","setItem","looping","removeAttribute","locate","at_playlist","playlistIndex","getItem","playlistInt","timeStart","sync_area_time","elmItem","e","preventDefault","handleClick","sortIndex","sortInt","that","init_playlist","elmIconPlay","elmIconLoop","play_at_here","isLoop","elmDetails","elmDetail","tabIndex","tabInt","loopList","loopWhole","loopPart","is_last","next_index","timeCurrent","timeDuration","isNaN","time_format","durationTime","sync_time","last","sync_progress_buffered","sync_progress_played","canplaythrough","timeupdate","ended","elm_slider","elm_play","elm_tabs","elm_volume","elm_foot","elm_assistant","sync_subtitle","loop_detect","init_elements","init_events","init_volume","init_sortlist","sortListURL","term","array","_","j","floor","random","seconds","minutes","hours","intHours","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}