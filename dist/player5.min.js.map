{"version":3,"file":"player5.min.js","mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,UAAW,GAAIH,GACI,iBAAZC,QACdA,QAAiB,QAAID,IAErBD,EAAc,QAAIC,GACnB,CATD,CASGK,MAAM,IACT,M,mHCKO,SAAcC,GACnB,IAAMC,EAAcD,EAAKE,SACnBC,EAAWH,EAAKI,IACtBC,EAAMC,IAAMH,EACZE,EAAME,QACN,EAAAL,EAAAA,SAASD,IACT,EAAAO,EAAAA,WAAUR,IACV,EAAAS,EAAAA,YAAWN,GAAUO,MAAK,WACxBC,QAAQC,IAAI,uBACd,GACF,E,QAgBO,WACL,IAAMC,EAAOC,EAAAA,QAAMC,SAASC,MACtBC,EAAQH,EAAAA,QAAMC,SAASE,MACvBjB,EAAOa,EAAKI,GAClBZ,EAAMa,SACN,EAAAC,EAAAA,eAAa,IACb,EAAAC,EAAAA,eAAa,IACb,EAAAC,EAAAA,gBAAc,IACd,EAAAC,EAAAA,cAAatB,GACbc,EAAAA,QAAMS,QAAQC,SAAU,CAC1B,E,OAxBO,WAOLnB,EAAMoB,QACN,EAAAN,EAAAA,eAAa,IACb,EAAAC,EAAAA,eAAa,IACb,EAAAC,EAAAA,gBAAc,GACdP,EAAAA,QAAMS,QAAQC,SAAU,CAC1B,EAvCA,aAKA,SACA,SACA,SACA,YACA,YAAkC,mDAE3B,IAAMnB,EAAQ,IAAIqB,MAAQ,UAE1B,IAAMC,EAAU,IAAIC,aAAe,W,iFCDzC,SAEmC,GAAD,gC,WAmE5B,WACL,IAAMC,EAAUf,EAAAA,QAAMC,SAASE,MAGzBa,GAFQhB,EAAAA,QAAMC,SAASC,MACRe,OACLjB,EAAAA,QAAMC,SAASe,SACzBE,EAAYF,EAAQC,OAE1B,OAAIC,EAEe,IADHF,EAAQG,QAAQJ,GAGX,IAAZA,CAEX,E,UA5BO,WACL,IAAMA,EAAUf,EAAAA,QAAMC,SAASE,MAEzBc,EADQjB,EAAAA,QAAMC,SAASC,MACRe,OACfD,EAAUhB,EAAAA,QAAMC,SAASe,QACzBE,EAAYF,EAAQC,OAE1B,OAAIC,EACYF,EAAQG,QAAQJ,KACbE,EAAS,EAEnBF,IAAYE,EAAS,CAEhC,E,wBAnDO,WACL,IAAMF,EAAUf,EAAAA,QAAMC,SAASE,MAEzBc,EADQjB,EAAAA,QAAMC,SAASC,MACRe,OACfD,EAAUhB,EAAAA,QAAMC,SAASe,QACzBE,EAAYF,EAAQC,OAE1B,GAAIC,EAAW,CACb,IACME,EADQJ,EAAQG,QAAQJ,GACT,EAErB,OAAOC,EADGI,EAAOH,EAAS,EAAI,EAAIG,EAEpC,CACE,IAAMA,EAAOL,EAAU,EAEvB,OADUK,EAAOH,EAAS,EAAI,EAAIG,CAGtC,E,OAEO,WACL,IAAML,EAAUf,EAAAA,QAAMC,SAASE,MAEzBc,EADQjB,EAAAA,QAAMC,SAASC,MACRe,OACfD,EAAUhB,EAAAA,QAAMC,SAASe,QACzBE,EAAYF,EAAQC,OAE1B,GAAIC,EAAW,CACb,IACMG,EADQL,EAAQG,QAAQJ,GACT,EAErB,OAAOC,EADGK,GAAS,EAAIA,EAAOJ,EAAS,EAEzC,CACE,IAAMI,EAAON,EAAU,EAEvB,OADUM,GAAS,EAAIA,EAAOJ,EAAS,CAG3C,E,UAxCO,WAEP,EA1BA,gBACA,SAEA,GADA,OACA,QACA,YAA4B,sSAH5B,8lGAAAK,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAKO,SAASC,EAAapB,GAC3B,IAEMjB,EAFWc,EAAAA,QAAMC,SAASC,WACNsB,IAAVrB,EAAsBH,EAAAA,QAAMC,SAASE,MAAQA,IAG7D,EAAAV,EAAAA,MAAKP,EACP,CAEmC,aAQlC,OARkC,cAA5B,WAA6BuC,GAAO,2EACV,OAAzBnC,EAAMmC,EAAQC,YAAW,SACRC,MAAMrC,GAAI,OAAnB,OAARsC,EAAW,EAAH,cACKA,EAASC,OAAM,OAA5BA,EAAO,EAAH,KACV7B,EAAAA,QAAMC,SAASC,MAAQ2B,EAAK5B,UAC5B,EAAA6B,EAAAA,gBAAeD,EAAK5B,WACpB,EAAA8B,EAAAA,WACAR,IAAe,6CAChB,sB,UCtBDzC,EAAOD,QAAU,CACf4B,QAAS,CACPC,SAAS,EACTsB,OAAO,EACPC,OAAQ,GACRC,KAAM,CACJnC,KAAM,CACJoC,MAAM,GAERC,MAAO,CACLD,MAAM,EACNE,OAAQ,EACRC,KAAM,GAERC,KAAM,CACJJ,MAAM,EACNE,OAAQ,EACRC,KAAM,KAIZ/C,MAAO,CACLiD,SAAU,EACVpD,SAAU,CACRqD,OAAO,EACP1C,KAAM,GACNgB,SAAU,IAGd2B,OAAQ,CACNC,OAAQ,CACNC,KAAM,KAGV3C,SAAU,CACRE,MAAO,EACPa,QAAS,GACTd,MAAO,I,iTCmBJ,SAAiBC,GAClBH,EAAAA,QAAMT,MAAMH,SAAS2B,UAAYZ,IACnCH,EAAAA,QAAMT,MAAMH,SAAS2B,QAAUZ,GAC/B,EAAA0C,EAAAA,cAAa1C,GAEjB,E,UAtBC,4C,UA6BM,WACLH,EAAAA,QAAMT,MAAMH,SAAS2B,SAAW,CAClC,E,QAPO,WACLf,EAAAA,QAAMT,MAAMH,SAAS2B,SAAW,EAChCf,EAAAA,QAAMT,MAAMH,SAASW,KAAO,EAC9B,EAlEA,eACA,SAIA,YAA4B,gEAJ5B,8lGAAAuB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+kBAAAA,GAAA,gEAAAA,GAAA,0JAAAA,EAAA,6FAAAA,GAAA,mIAAAA,IAAA,4SAAAA,IAAA,2OAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,SAMA,SAASwB,EAAYC,GACnB,IAAyC,IAAnBA,EAAMC,MAAM,QAAO,GACzC,OAAuC,KAA3B,IADJ,KACO,GAAU,IADd,OAAG,QAAI,IAEpB,CAEA,SAASC,EAAQC,GACf,IAAMC,EAAY,GACd/D,EAAW,CAAC,EAwBhB,OAtBA8D,EAAME,SAAQ,SAACC,EAAMlD,GACnB,GAAKkD,EAAKC,OAAOrC,OACjB,GAAIsC,OAAOC,WAAWH,IACpBjE,EAAW,CAAC,GACHe,OAASkD,MAFpB,CAKA,IAAKjE,EAASqE,UAAW,CACvB,IAAgD,IAAnBJ,EAAKL,MAAM,YAAQ,GAAzCS,EAAS,KAAEC,EAAO,KAGzB,OAFAtE,EAASqE,UAAYX,EAAYW,QACjCrE,EAASsE,QAAUZ,EAAYY,GAEjC,CAEItE,EAASuE,KACXvE,EAASuE,MAAQvE,EAASuE,MAAQ,IAAM,OAASN,GAGjDjE,EAASuE,KAAON,EAElBF,EAAUS,KAAKxE,GAdf,CAeF,IACO+D,CACT,CAAC,aAeA,OAfA,cAEc,WAAe7D,GAAG,gFAC1BA,EAAK,CAAF,eAEyB,OAD/B,EAAAuE,EAAAA,gBAAe,IACf7D,EAAAA,QAAMT,MAAMH,SAASW,KAAO,GAAG,0CAGf4B,MAAMrC,GAAI,OAAnB,OAAHwE,EAAM,EAAH,cACUA,EAAIH,OAAM,OAAvBA,EAAO,EAAH,KACJI,EAAYJ,EAAKX,MAAM,SACvBgB,EAAYf,EAAQc,IAC1B,EAAAF,EAAAA,gBAAeG,GACfhE,EAAAA,QAAMT,MAAMH,SAASW,KAAOiE,GAC5B,EAAAC,EAAAA,WAAiB,6CAClB,sB,iGCtBD,cA1B2B,SAAS1E,GAClC,IAGI2E,EAHEjF,EAAOkF,KACbA,KAAKlC,OAAS,EACdkC,KAAKC,WAAa,IAAIC,WAAW,KAGjC,IAWMC,EAAW,IAAIxD,aACfyD,EAAMD,EAASE,yBAAyBjF,IAC9C2E,EAAUI,EAASG,kBACVC,QAAU,IACnBH,EAAII,QAAQT,GACZA,EAASS,QAAQL,EAASM,aAhBA,SAApBC,IACJX,EAASY,qBAAqB7F,EAAKmF,YAEnC,IAAIW,EAAQ,EACZ,IAAI,IAAIzD,KAAKrC,EAAKmF,WAChBW,GAAS9F,EAAKmF,WAAW9C,GAE3BrC,EAAKgD,OAAS8C,EACdC,sBAAsBH,EACxB,CAQAA,EACF,EAkWE,aA3VwB,WACtB,IAAII,EAIAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EAVAC,EAAQ,GACRC,EAAQ,GAWd,SAASC,EAAQC,EAAOC,EAAGC,EAAGb,EAAUc,EAAKC,GAC3C7B,KAAKyB,MAAQA,EACbzB,KAAKc,SAAWA,EAChBd,KAAK4B,IAAMA,EACX5B,KAAK6B,IAAMA,EACX7B,KAAK8B,KAAO,EACZ9B,KAAK+B,MAAQ/B,KAAK6B,IAAM,GAAK,IAAM,EACnC7B,KAAKgC,UAAY,EAGjB,IAAMC,EAAOC,KAAKC,MAAMD,KAAKE,IAAIF,KAAKG,GAAG,GAAGvB,EAAS,GACrDd,KAAK2B,EAAIO,KAAKC,MAAMF,EAAOC,KAAKI,IAAIJ,KAAKG,GAAG,IAAMV,GAClD3B,KAAK0B,EAAIQ,KAAKC,MAAMT,EAAIO,EAAON,EAAIM,EAAK,GAGxCjC,KAAKuC,SAAW,GAChB,IAAK,IAAIpF,EAAI,EAAGA,GAAK6C,KAAKyB,MAAMtE,GAAK,EACnCuE,EAAI1B,KAAK0B,EAAI1B,KAAKc,SAAWoB,KAAKE,IAAQ,EAAJjF,EAAQ+E,KAAKG,GAAKrC,KAAKyB,MAAQS,KAAKG,GAAG,GAC7EV,EAAI3B,KAAK2B,EAAI3B,KAAKc,SAAWoB,KAAKI,IAAQ,EAAJnF,EAAQ+E,KAAKG,GAAKrC,KAAKyB,MAAQS,KAAKG,GAAG,GAC7ErC,KAAKuC,SAAS9C,KAAK,CAACiC,EAAGC,GAE3B,CAEAH,EAAQgB,UAAUC,eAAiB,WAEjC,IAAIC,EAhCa,KAiCjBA,GAAYrB,EAAYvD,OAAS,IAAQoE,KAAKI,IAAIjB,EAAYvD,OAAO,KAAU,EAC/E,IAAK,IAAIX,EAAI,EAAGA,GAAK6C,KAAKyB,MAAM,EAAEtE,GAAK,EACrC6C,KAAKuC,SAASpF,GAAG,GAAK6C,KAAKuC,SAASpF,GAAG,GAAK6C,KAAKuC,SAASpF,GAAG,GAAK+E,KAAKI,IAAII,GAC3E1C,KAAKuC,SAASpF,GAAG,GAAK6C,KAAKuC,SAASpF,GAAG,GAAK6C,KAAKuC,SAASpF,GAAG,GAAK+E,KAAKI,IAAII,EAE/E,EAEAlB,EAAQgB,UAAUG,gBAAkB,SAASC,GAC3C,IAAMC,EAAQX,KAAKY,KAAKF,EAAO,GAAGA,EAAO,IACnCG,EAAWb,KAAKc,KAAKd,KAAKe,IAAIL,EAAO,GAAI,GAAKV,KAAKe,IAAIL,EAAO,GAAI,IAClEM,EAAehB,KAAKiB,IAAIjB,KAAKkB,IAAyC,GAApClB,KAAKmB,IAAIhC,EAAYvD,OAAO,MAAe,IAAK,GAClFwF,EAAepB,KAAKe,IAAIF,EAAS,EAAG,IAAM1B,EAAYvD,OAAO,MAAYoE,KAAKe,IAAIjD,KAAK8B,KAAM,KAAK,KAAOoB,EAC3GK,EAAUrB,KAAKE,IAAIS,GAASS,EAC5BE,EAAUtB,KAAKI,IAAIO,GAASS,EAGhC,MAAO,CAFPC,GAAYX,EAAO,GAAK,GAAM,EAAI,EAClCY,GAAYZ,EAAO,GAAK,GAAM,EAAI,EAEpC,EAEApB,EAAQgB,UAAUiB,YAAc,WAC9B,IAYIC,EAAGC,EAAGC,EAAGC,EAZPC,EAAS5B,KAAK6B,KAAK1C,EAAYpB,WAAWnD,OAAOwE,EAAMxE,OAAOkD,KAAK6B,KACrEmC,EAAuD,IAAjD9B,KAAKe,IAAK5B,EAAYpB,WAAW6D,GAAQ,IAAK,GAYxD,IAXAE,GAAOhE,KAAK6B,IAAM,GAAK,IAAM,GAEnB7B,KAAK8B,KACb9B,KAAK8B,KAAOkC,GAEZhE,KAAK8B,MAAQ9B,KAAK+B,MAClBiC,EAAMhE,KAAK8B,MAKTkC,EAAM,EAAG,CACXhE,KAAK4B,IAAIqC,YACT,IAAIC,EAASlE,KAAK2C,gBAAgB3C,KAAKuC,SAAS,IAChDvC,KAAK4B,IAAIuC,OAAOnE,KAAKuC,SAAS,GAAG,GAAK2B,EAAO,GAAIlE,KAAKuC,SAAS,GAAG,GAAK2B,EAAO,IAE9E,IAAK,IAAI/G,EAAI,EAAGA,GAAK6C,KAAKyB,MAAM,EAAEtE,GAAK,EACrC+G,EAASlE,KAAK2C,gBAAgB3C,KAAKuC,SAASpF,IAC5C6C,KAAK4B,IAAIwC,OAAQpE,KAAKuC,SAASpF,GAAG,GAAK+G,EAAO,GAAIlE,KAAKuC,SAASpF,GAAG,GAAK+G,EAAO,IAEjFlE,KAAK4B,IAAIyC,YAELL,EAAM,KACRN,EAAc,GAATM,EAAI,KACTL,EAAsD,KAAhDzB,KAAKE,IAAK,EAAE4B,EAAI,IAAI9B,KAAKG,GAAG,EAAI,EAAEH,KAAKG,GAAG,GAAG,GACnDuB,EAAc,GAATI,EAAI,MAEFA,EAAM,KACbN,EAAc,GAATM,EAAI,KACTL,EAAI,IACJC,EAAc,GAATI,EAAI,OAGTN,EAAyC,KAAnCxB,KAAKE,IAAK,EAAE4B,EAAI,IAAI9B,KAAKG,GAAG,GAAI,GACtCsB,EAAsD,KAAhDzB,KAAKE,IAAK,EAAE4B,EAAI,IAAI9B,KAAKG,GAAG,EAAI,EAAEH,KAAKG,GAAG,GAAG,GACnDuB,EAAwD,KAAlD1B,KAAKE,IAAK,IAAI4B,EAAI,IAAI9B,KAAKG,GAAG,EAAI,EAAEH,KAAKG,GAAG,GAAG,IAEnD2B,EAAM,MACRhE,KAAKsE,MAAQN,GAEXA,EAAM,MACRhE,KAAKgC,UAAY,KAGnB,IAAMuC,EAAI,OAWV,GAVAV,EAAK,IAAK,EAAI,GAAK3B,KAAKe,IAAIsB,GAAIP,EAAI,IAAQ,IAAK,EAAI,GAAK9B,KAAKe,IAAIsB,GAAIP,EAAI,KAE3EhE,KAAK4B,IAAI4C,UAAY,QACnBtC,KAAKC,MAAMuB,GAAK,KAChBxB,KAAKC,MAAMwB,GAAK,KAChBzB,KAAKC,MAAMyB,GAAK,KAChBC,EACF,IACA7D,KAAK4B,IAAI6C,OAELT,EAAM,GAAI,CAEZhE,KAAK4B,IAAI8C,YAAe,wBACxB1E,KAAK4B,IAAI+C,UAAY,EACrB3E,KAAK4B,IAAIgD,QACX,CACF,CACF,EAEApD,EAAQgB,UAAUqC,cAAgB,WAChC7E,KAAK4B,IAAIqC,YAET,IAAIC,EAASlE,KAAK2C,gBAAgB3C,KAAKuC,SAAS,IAChDvC,KAAK4B,IAAIuC,OAAOnE,KAAKuC,SAAS,GAAG,GAAK2B,EAAO,GAAIlE,KAAKuC,SAAS,GAAG,GAAK2B,EAAO,IAE9E,IAAK,IAAI/G,EAAI,EAAGA,GAAK6C,KAAKyB,MAAM,EAAEtE,GAAK,EACrC+G,EAASlE,KAAK2C,gBAAgB3C,KAAKuC,SAASpF,IAC5C6C,KAAK4B,IAAIwC,OAAQpE,KAAKuC,SAASpF,GAAG,GAAK+G,EAAO,GAAIlE,KAAKuC,SAASpF,GAAG,GAAK+G,EAAO,IAEjFlE,KAAK4B,IAAIyC,YACT,IAAMR,EAAI7D,KAAKgC,UAAU,IACzBhC,KAAK4B,IAAI8C,YAAe,uBAAyBb,EAAI,IACrD7D,KAAK4B,IAAI+C,UAAY,EACrB3E,KAAK4B,IAAIgD,SACT5E,KAAKgC,WAAa,EACpB,EA4BA,SAAS8C,EAAKpD,EAAGC,EAAGoD,EAAUnD,GAC5B5B,KAAK0B,EAAIA,EACT1B,KAAK2B,EAAIA,EACT3B,KAAK6C,MAAQX,KAAKY,KAAKZ,KAAK8C,IAAIrD,GAAGO,KAAK8C,IAAItD,IAC5C1B,KAAK+E,SAAWA,EAChB/E,KAAK4B,IAAMA,EACX5B,KAAK8B,KAAO,CACd,CAEAgD,EAAKtC,UAAUyC,SAAW,WACxB,IAAMC,EAAqBhD,KAAKc,KAAKd,KAAKe,IAAIjD,KAAK0B,EAAG,GAAKQ,KAAKe,IAAIjD,KAAK2B,EAAG,IAGtEwD,EAAa,IAAMjD,KAAKiB,IAAIjB,KAAKC,MAAkB,EAAZnC,KAAK8B,MAAW,IAC7D9B,KAAK4B,IAAI+C,UAAW,GAAMO,EAAmB,IAAOhD,KAAKkB,IAAIpD,KAAK+E,SAAS,EAAG,GAC9E/E,KAAK4B,IAAI8C,YAAY,QAAUS,EAAa,KAAOA,EAAa,KAAOA,EAAa,OACpFnF,KAAK4B,IAAIqC,YACTjE,KAAK4B,IAAIuC,OAAOnE,KAAK0B,EAAE1B,KAAK2B,GAC5B,IAAMyD,EAAe,EAAIlD,KAAKiB,IAAIjB,KAAKe,IAAIiC,EAAmB,GAAG,IAAQhD,KAAKe,IAAI5B,EAAYvD,OAAQ,GAAG,IAASoH,GAC9GG,EAAMnD,KAAKE,IAAIpC,KAAK6C,QAAUuC,EAC9BE,EAAMpD,KAAKI,IAAItC,KAAK6C,QAAUuC,EAClCC,GAAOrF,KAAK0B,EAAI,EAAI,GAAK,EACzB4D,GAAOtF,KAAK2B,EAAI,EAAI,GAAK,EACzB3B,KAAK4B,IAAIwC,OAAOpE,KAAK0B,EAAI2D,EAAKrF,KAAK2B,EAAI2D,GACvCtF,KAAK4B,IAAIgD,SACT5E,KAAK4B,IAAIyC,YAGT,IAAMkB,EAAQH,EAAa,GAAKpF,KAAK+E,SACrC/E,KAAK8B,MAAQI,KAAKkB,IAAIpD,KAAK8B,KAAO,KAAQ,GACtCyD,EAAQvF,KAAK8B,OACf9B,KAAK8B,KAAOyD,GAEd,IAAMC,EAAKtD,KAAKE,IAAIpC,KAAK6C,OAAS7C,KAAK8B,KACjC2D,EAAKvD,KAAKI,IAAItC,KAAK6C,OAAS7C,KAAK8B,KACvC9B,KAAK0B,GAAK1B,KAAK0B,EAAI,EAAI8D,GAAMA,EAC7BxF,KAAK2B,GAAK3B,KAAK2B,EAAI,EAAI8D,GAAMA,EAE7B,IAAMC,EAAS3E,EAAS4E,OAAO,EAAI,IAC7BC,EAAS7E,EAAS8E,MAAM,EAAI,KAC7B7F,KAAK2B,EAAI+D,GAAU1F,KAAK2B,GAAK+D,GAAY1F,KAAK0B,EAAIkE,GAAU5F,KAAK0B,GAAKkE,KAEzE5F,KAAK0B,GAAKQ,KAAK4D,SAAW,IAAO/E,EAAS8E,MAAM,EAChD7F,KAAK2B,GAAKO,KAAK4D,SAAW,IAAO/E,EAAS4E,OAAO,EACjD3F,KAAK6C,MAAQX,KAAKY,KAAKZ,KAAK8C,IAAIhF,KAAK2B,GAAGO,KAAK8C,IAAIhF,KAAK0B,IAE1D,EAEA,IAYMqE,EAAS,WACb7E,EAAM8E,UAAU,EAAG,EAAG/E,EAAS4E,MAAO5E,EAAS0E,QAC/C,IAAM3B,EAAM3C,EAAYvD,OAAO,IACzB4F,EAAI,IAA4B,IAArBxB,KAAKI,IAAI0B,GAAO,GAC3BL,EAAU,EAANK,EACJJ,EAAU,EAANI,EACA9B,KAAKI,IAAI0B,EAAI,EAAE9B,KAAKG,GAAG,GACjCnB,EAAM+C,YACN/C,EAAM+E,KAAK,EAAG,EAAGhF,EAAS4E,MAAO5E,EAAS0E,QAE1C,IAAMO,EAAMhF,EAAMiF,qBAAqBlF,EAAS4E,MAAM,EAAG5E,EAAS0E,OAAO,EAAG3B,EAAK/C,EAAS4E,MAAM,EAAG5E,EAAS0E,OAAO,EAAG1E,EAAS4E,MAAM3D,KAAKiB,IAAIjB,KAAKe,IAAIe,EAAK,KAAM/C,EAAS4E,MAAQ,KACnLK,EAAIE,aAAa,EAAG,iBACpBF,EAAIE,aAAa,GAAK,QACpBlE,KAAKC,MAAMuB,GAAK,KAChBxB,KAAKC,MAAMwB,GAAK,KAChBzB,KAAKC,MAAMyB,GACb,UAEA1C,EAAMsD,UAAY0B,EAClBhF,EAAMuD,MACR,EAEAzE,KAAKqG,aAAe,SAASR,EAAOF,GAC9B5E,IAEFA,EAAS8E,MAAQA,EACjB9E,EAAS4E,OAASA,EAClB3E,EAAMsF,UAAUvF,EAAS8E,MAAM,EAAE9E,EAAS4E,OAAO,GAGjD1E,EAAS4E,MAAQA,EACjB5E,EAAS0E,OAASA,EAGlBxE,EAAS0E,MAAQA,EACjB1E,EAASwE,OAASA,EAClBvE,EAAMkF,UAAUvF,EAAS8E,MAAM,EAAE9E,EAAS4E,OAAO,GAEjD7E,EAAWC,EAAS8E,MAAQ9E,EAAS4E,OAAS5E,EAAS8E,MAAQ,GAAK9E,EAAS4E,OAAS,GAEtFI,IA9HqB,WAOvB,IAAI5I,EAAI,GANRmE,EAAQ,IAOF7B,KAAK,IAAI+B,EAAQ,EAAG,EAAG,EAAGV,EAAUE,EAAO7D,IACjDA,IACA,IAAK,IAAIoJ,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACtCjF,EAAM7B,KAAK,IAAI+B,EAAQ,EAAG,EAAG+E,EAAOzF,EAAUE,EAAO7D,IAAKA,IAC1DmE,EAAM7B,KAAK,IAAI+B,EAAQ,EAAG,GAAI+E,EAAOzF,EAAUE,EAAO7D,IAAKA,IAC3D,IAAI,IAAIuE,EAAI,EAAGA,EAAI6E,EAAO7E,IACxBJ,EAAM7B,KAAK,IAAI+B,EAAQ,EAAGE,GAAI6E,EAAOzF,EAAUE,EAAO7D,IAAKA,IAC3DmE,EAAM7B,KAAK,IAAI+B,EAAQ,GAAIE,EAAG6E,EAAOzF,EAAUE,EAAO7D,IAAKA,IAC3DmE,EAAM7B,KAAK,IAAI+B,EAAQ,EAAGE,EAAG6E,EAAM7E,EAAGZ,EAAUE,EAAO7D,IAAKA,IAC5DmE,EAAM7B,KAAK,IAAI+B,EAAQ,GAAIE,GAAI6E,EAAM7E,EAAGZ,EAAUE,EAAO7D,IAAKA,IAEhE,IAAI,IAAIwE,GAAK4E,EAAO5E,GAAK,EAAGA,IAC1BL,EAAM7B,KAAK,IAAI+B,EAAQ,EAAG+E,EAAO5E,EAAGb,EAAUE,EAAO7D,IAAKA,IAC1DmE,EAAM7B,KAAK,IAAI+B,EAAQ,GAAI+E,GAAQ5E,EAAGb,EAAUE,EAAO7D,IAAKA,GAEhE,CACF,CAuGIqJ,GArDkB,WACpB,IAAI9E,EAAGC,EAAGoD,EACVxD,EAAQ,GAER,IADA,IAAMkF,EAAQ1F,EAAS8E,MAAQ,GACtB1I,EAAI,EAAGA,EAAIsJ,EAAOtJ,IACzBuE,GAAKQ,KAAK4D,SAAW,IAAO/E,EAAS8E,MACrClE,GAAKO,KAAK4D,SAAW,IAAO/E,EAAS4E,OACrCZ,EAA+B,GAAnB7C,KAAK4D,SAAS,IAC1BvE,EAAM9B,KAAK,IAAIqF,EAAKpD,EAAGC,EAAGoD,EAAU3D,GAExC,CA4CIsF,GAEJ,EAEA,IAAMC,EAAmB,WACvBrF,EAAMrC,SAAQ,SAAS2H,GACrBA,EAAKnE,gBACP,GACF,EAEMoE,EAAO,SAAPA,IACJ7F,EAAMgF,WAAWjF,EAAS8E,OAAQ9E,EAAS4E,OAAuB,EAAf5E,EAAS8E,MAA0B,EAAjB9E,EAAS4E,QAC9EvE,EAAM4E,WAAWjF,EAAS8E,MAAM,GAAI9E,EAAS4E,OAAO,EAAG5E,EAAS8E,MAAO9E,EAAS4E,QAEhFpE,EAAMtC,SAAQ,SAAS6H,GACrBA,EAAK7B,UACP,IACA3D,EAAMrC,SAAQ,SAAS2H,GACrBA,EAAKnD,aACP,IACAnC,EAAMrC,SAAQ,SAAS2H,GACjBA,EAAK5E,UAAY,GACnB4E,EAAK/B,eAET,IACAhE,sBAAsBgG,EACxB,EAEA7G,KAAK+G,KAAO,SAASzJ,GACnB+D,EAAc/D,EAAQ+D,YACtB,IAAM2F,EAAYC,SAASC,cAAc5J,EAAQ6J,aAC3CxB,EAASqB,EAAUI,aACnBvB,EAAQmB,EAAUK,YAClBC,EAAQ,yCAGdvG,EAAWkG,SAASM,cAAc,WACzBC,aAAa,QAASF,EAAQ,eACvCvG,EAAS4E,OAASA,EAClB5E,EAAS8E,MAAQA,EACjB7E,EAAQD,EAAS0G,WAAW,MAC5BT,EAAUU,YAAY3G,IAGtBI,EAAW8F,SAASM,cAAc,WACzBC,aAAa,QAASF,EAAQ,cACvCnG,EAASwE,OAASA,EAClBxE,EAAS0E,MAAQA,EACjBzE,EAAQD,EAASsG,WAAW,MAC5BT,EAAUU,YAAYvG,IAGtBF,EAAWgG,SAASM,cAAc,WACzBC,aAAa,QAASF,EAAQ,cACvCrG,EAAS0E,OAASA,EAClB1E,EAAS4E,MAAQA,EACjB3E,EAAQD,EAASwG,WAAW,MAC5BT,EAAUU,YAAYzG,GAEtBjB,KAAKqG,aAAaR,EAAOF,GACzBkB,IAEAc,YAAY5B,EAAQ,KACpB4B,YAAYhB,EAAkB,GAWhC,CACF,C,gFC7XO,WACL,IAAMiB,EAAUC,EAAAA,QAAKC,QAAQtN,KAC7BqN,EAAAA,QAAKC,QAAQhM,UAAW,EAAAiM,EAAAA,SAAQ,WAAYH,GAC5CC,EAAAA,QAAKC,QAAQE,OAAQ,EAAAD,EAAAA,SAAQ,QAASH,EACxC,EAPA,IACsB,EADtB,QACA,GAAsB,EAAtB,QAAsB,0B,gFCEf,WACLC,EAAAA,QAAKvL,QAAQ9B,MAAO,EAAAuN,EAAAA,SAAQ,qBAC5BF,EAAAA,QAAKvL,QAAQE,MAAO,EAAAuL,EAAAA,SAAQ,UAC5BF,EAAAA,QAAKvL,QAAQwB,OAAOmK,QAAS,EAAAF,EAAAA,SAAQ,iBACrCF,EAAAA,QAAKvL,QAAQwB,OAAOoK,MAAO,EAAAH,EAAAA,SAAQ,cACrC,E,eAEO,SAAsBxL,GAC3B,IAAM4L,EAAYN,EAAAA,QAAKvL,QAAQE,KAC3BD,GACF4L,EAAUC,UAAUC,OAAO,UAC3BF,EAAUC,UAAUE,IAAI,UAExBH,EAAUC,UAAUC,OAAO,QAC3BF,EAAUC,UAAUE,IAAI,UAE5B,E,cAEO,SAAqBtE,GAC1B,IAAMuE,EAAYV,EAAAA,QAAKvL,QAAQwB,OAAOmK,OAChCO,EAAUX,EAAAA,QAAKvL,QAAQwB,OAAOoK,KAC9BnM,EAAQ0M,WAAWzE,GACX,IAAVjI,EACFyM,EAAQJ,UAAUE,IAAI,SAEtBE,EAAQJ,UAAUC,OAAO,SAE3BE,EAAUxM,MAAgB,IAARA,CACpB,EA/BA,IACsB,EADtB,QACA,GAAsB,EAAtB,QAAsB,0B,+EC6Gf,WACL8L,EAAAA,QAAKtJ,OAAOmK,YAAa,EAAAX,EAAAA,SAAQ,oBACjCF,EAAAA,QAAKtJ,OAAOoK,MAAO,EAAAZ,EAAAA,SAAQ,aAC3BF,EAAAA,QAAKtJ,OAAOqK,SAAU,EAAAb,EAAAA,SAAQ,kBAChC,E,eAyDO,SAAsBhN,GAC3B,IAAM8N,EAAahB,EAAAA,QAAKtJ,OAAOqK,QACzBE,GAAW,EAAAf,EAAAA,SAAQ,UAAWc,GACpC,IAAK9N,IAASA,EAAKgO,QAEjB,YADAD,EAASxB,MAAM0B,gBAAkB,IAGnCF,EAASxB,MAAM0B,gBAAkB,OAAH,OAAWjO,EAAKgO,QAAO,IACvD,E,cA/DO,WACL,IAAME,EAAUpB,EAAAA,QAAKtJ,OAAOoK,KACtBO,EAAarN,EAAAA,QAAM0C,OAAOC,OAAOC,KACjC0K,EAAMlC,SAASmC,gBAAgB,6BAA8B,OACnED,EAAI3B,aAAa,UAAW,QAAU0B,EAAa,MACnDC,EAAI3B,aAAa,sBAAuB,QACxC,IAAM7D,EAAIsD,SAASmC,gBAAgB,6BAA8B,KACjED,EAAIzB,YAAY/D,GAChB,IAAM0F,EAAOpC,SAASmC,gBACpB,6BACA,QAEFC,EAAK7B,aAAa,IAAK,IACvB7D,EAAE+D,YAAY2B,GACdJ,EAAQK,UAAY,GACpBL,EAAQvB,YAAYyB,EACtB,E,eA8BO,SAAsB5M,GAC3B,IAAMsM,EAAahB,EAAAA,QAAKtJ,OAAOqK,QAC3BrM,EACFsM,EAAWT,UAAUE,IAAI,QAEzBO,EAAWT,UAAUC,OAAO,OAEhC,E,aAnCO,SAAoBlN,GACzB,IACMoO,EADU1B,EAAAA,QAAKtJ,OAAOoK,KACJzB,cAAc,cAEtC,OADAqC,GAAWA,EAAQ/B,aAAa,IAAK,IAC9B,IAAIgC,SAAQ,SAACC,EAASC,GAC3B,IAAMT,EAAUpB,EAAAA,QAAKtJ,OAAOoK,KACtBO,EAAarN,EAAAA,QAAM0C,OAAOC,OAAOC,KACvCjB,MAAMrC,GACLM,MAAK,SAAAgC,GAAQ,OAAIA,EAASkM,aAAa,IACvClO,MAAK,SAAAkO,GACJjN,EAAAA,QAAQkN,gBAAgBD,GAAa,SAASE,GAC5C,IACMR,EAzDd,SAAoBS,GAUlB,IANA,IAAMC,EAAaD,EAAMhN,OAKrBkN,EAAI,GACCC,EAAa,EAAGA,EAAaF,EAAYE,IAE9CD,GADEC,EAAa,GAAM,EAChB,KAAJ,UAAYA,EAAa,GAAE,aAAKH,EAAMI,SAElC,KAAJ,UAAYD,EAAa,GAAE,aAAKH,EAAMI,SAI3C,OAAOF,CACT,CAsCqBG,CA7IrB,SAAmBrN,EAAQsN,GAYzB,IARA,IAAMC,EAAaD,EAAOtN,OAASA,EAC7BwN,KAAgBD,EAAa,KAAO,EACpCE,EAAmBH,EAAOG,iBAC1BC,EAAc,GAMdC,EAAgB,EACpBA,EAAgBF,EAChBE,IAYA,IANA,IAAMX,EAAQ,GACRY,EAAcN,EAAOO,eAAeF,GAKjCR,EAAa,EAAGA,EAAanN,EAAQmN,IAAc,CAiB1D,IAbA,IAAM/L,KAAW+L,EAAaI,GACxBlM,KAASD,EAAQmM,GAKnBlH,EAAMuH,EAAY,GAClBtH,EAAMsH,EAAY,GAOhBE,EAAc1M,EAClB0M,EAAczM,EACdyM,GAAeN,EACf,CACA,IAAMvO,EAAQ2O,EAAYE,GAEtB7O,EAAQqH,IACVA,EAAMrH,GAEJA,EAAQoH,IACVA,EAAMpH,EAEV,CAKA+N,EAAM,EAAIG,GAAc7G,EACxB0G,EAAM,EAAIG,EAAa,GAAK9G,GAKN,IAAlBsH,GAAuBrH,EAAMoH,EAAY,EAAIP,MAC/CO,EAAY,EAAIP,GAAc7G,IAGV,IAAlBqH,GAAuBtH,EAAMqH,EAAY,EAAIP,EAAa,MAC5DO,EAAY,EAAIP,EAAa,GAAK9G,EAEtC,CAMF,OAAOqH,CACT,CA0DsBK,CAAU3B,EAAYW,IAEpBZ,EAAQ/B,cAAc,cAC9BM,aAAa,IAAK6B,GAC1BI,GACF,GACF,GACF,GAQF,EAhKA,YACA,SACA,YACA,WAAsB,mD,SCHtB9O,EAAOD,QAAU,CACfF,KAAM,KACN8B,QAAS,CACPE,KAAM,KACNsB,OAAQ,CACNmK,OAAQ,KACRC,KAAM,MAER1N,KAAM,MAERsQ,KAAM,CACJlO,QAAS,KACTyB,SAAU,MAEZ0M,SAAU,CACRC,SAAU,KACVC,OAAQ,KACRC,MAAO,MAET3M,OAAQ,CACNmK,WAAY,KACZC,KAAM,KACNC,QAAS,MAEXd,QAAS,CACPtN,KAAM,KACN2Q,KAAM,KACNrP,SAAU,KACVkM,MAAO,MAEToD,KAAM,CACJ5Q,KAAM,M,2ECvBK,SAAS8C,GACtB,IAAMsK,EAAUtK,EAAQ+N,iBACL/N,EAAQgO,WACVhO,EAAQiO,SACzB1D,EAAAA,QAAKrN,KAAOoN,EACZC,EAAAA,QAAKC,QAAQtN,KAAO8C,EAAQgO,YAE5B,EAAAE,EAAAA,kBACA,EAAAC,EAAAA,iBACA,EAAAC,EAAAA,cACA,EAAAC,EAAAA,gBACA,EAAAC,EAAAA,iBACA,EAAAC,EAAAA,YACF,EArBA,IAMsB,EANtB,SACA,SACA,SACA,SACA,SACA,SACA,GAAsB,EAAtB,QAAsB,2BAerB,mB,6EClBM,WACLhE,EAAAA,QAAKuD,KAAK5Q,MAAO,EAAAuN,EAAAA,SAAQ,iBAC3B,E,YAEO,SAAmBhN,GACxB,IAAM+Q,EAAUjE,EAAAA,QAAKuD,KAAK5Q,KACpBuR,GAAU,EAAAhE,EAAAA,SAAQ,aAAc+D,GAChCE,GAAY,EAAAjE,EAAAA,SAAQ,eAAgB+D,GACpCG,GAAW,EAAAlE,EAAAA,SAAQ,cAAe+D,GACxCC,EAAQG,UAAYnR,EAAKoR,OAAS,GAClCH,EAAUE,UAAYnR,EAAKqR,QAAU,GACrCH,EAASC,UAAYnR,EAAKsR,OAAS,EACrC,EAfA,IACsB,EADtB,QACA,GAAsB,EAAtB,QAAsB,0B,kFCoBf,SAAwBvQ,GAC7B,IAAMwQ,EAAUzE,EAAAA,QAAKC,QAAQhM,SACvByQ,EAAWzQ,EAAS0Q,KAAI,SAACtN,EAAM/B,GAAC,OApBxC,SAAuBsP,EAAGtP,GACxB,MAAO,GAAE,oCACqBA,EAAC,0KAKLsP,EAAEN,MAAK,iEAEpBM,EAAEpO,SAAQ,gCAGzB,CAQ4CqO,CAAcxN,EAAM/B,EAAE,IAAEwP,KAAK,IACvEL,EAAQhD,UAPV,SAAuBiD,GACrB,MAAO,yCAAP,OAAiDA,EAAQ,eAC3D,CAKsBK,CAAcL,EACpC,E,gBAEO,SAAuBhQ,GAC5B,IAAM+P,EAAUzE,EAAAA,QAAKC,QAAQhM,SAC7B,IAAKS,EAAS,CACZ,IACMiM,EADa8D,EAAQpF,cAAc,YACdA,cAAc,uBAGzC,OAFAsB,EAAQJ,UAAUC,OAAO,gBACzBG,EAAQJ,UAAUE,IAAI,UAExB,CAEA,IAE2B,EAFrBuE,EAAWP,EAAQQ,iBAAiB,SACpClQ,EAAUf,EAAAA,QAAMC,SAASE,MAAM,EArCP,w6BAqCO,CAClB6Q,GAAQ,IAA3B,IAAK,EAAL,qBAA6B,KAAlB3N,EAAI,QACP6N,EAAU7N,EAAKgI,cAAc,uBAC7B8F,EAAU9N,EAAKgI,cAAc,oBACrB+F,SAAS/N,EAAKgO,QAAQ/P,KACtBP,GACZsC,EAAKkJ,UAAUE,IAAI,WACnByE,EAAQ3E,UAAUC,OAAO,WACzB0E,EAAQ3E,UAAUE,IAAI,aAEtBpJ,EAAKkJ,UAAUC,OAAO,WACtB0E,EAAQ3E,UAAUC,OAAO,WACzB0E,EAAQ3E,UAAUE,IAAI,WACtB0E,EAAQ5E,UAAUC,OAAO,MAE7B,CAAC,+BACH,EAtDA,gBACA,WAAgC,6J,iFCEzB,WACLR,EAAAA,QAAKkD,SAASC,UAAW,EAAAjD,EAAAA,SAAQ,qBACjCF,EAAAA,QAAKkD,SAASE,QAAS,EAAAlD,EAAAA,SAAQ,mBAC/BF,EAAAA,QAAKkD,SAASG,OAAQ,EAAAnD,EAAAA,SAAQ,kBAChC,E,yBAEO,SAAgCiD,EAAU3M,GAC3BwJ,EAAAA,QAAKkD,SAASC,SACtBjP,MAAQ0M,WAAWuC,EAAW3M,EAC5C,E,uBAEO,SAA8BzB,EAASyB,GAC5C,IAAM8O,EAAYtF,EAAAA,QAAKkD,SAASE,OAC1BmC,EAAWvF,EAAAA,QAAKkD,SAASG,MACzB9H,EAAM+J,EAAU/J,IAChBrH,EAASa,EAAUyB,EAAY+E,EACrC+J,EAAUpR,MAAQA,EAClBqR,EAASrR,MAAgB,IAARA,CACnB,EArBA,IACsB,EADtB,QACA,GAAsB,EAAtB,QAAsB,0B,kFCkFf,SAAwBgD,GAC7B,IAAMsO,EAAWxF,EAAAA,QAAKC,QAAQE,MACxBuE,EAAWxN,EAAMyN,KAAI,SAACtN,EAAM/B,GAAC,OAtBrC,SAAuB+B,EAAM/B,GAC3B,MAAO,GAAE,oCACqBA,EAAC,sLAMxB+B,EAAKM,KAAI,uEAGH0C,KAAKC,OAAQjD,EAAKK,QAAUL,EAAKI,WAAa,IAAQ,IAAM,GAAE,gCAG7E,CAQ0CoN,CAAcxN,EAAM/B,EAAE,IAAEwP,KAAK,IACrEU,EAAS/D,UAPX,SAAwBiD,GACtB,MAAO,sCAAP,OAA8CA,EAAQ,eACxD,CAKuBe,CAAef,EACtC,E,eAzDO,SAAsBvQ,GAC3B,IAAe,IAAXA,EAAc,OAGlB,GADcH,EAAAA,QAAMT,MAAMH,SAASqD,MAGjC,YADAzC,EAAAA,QAAMT,MAAMH,SAASqD,OAAQ,GAI/B,IAAM+O,EAAWxF,EAAAA,QAAKC,QAAQE,MACxB6E,EAAWQ,EAASP,iBAAiB,SAErC5N,EADQrD,EAAAA,QAAMT,MAAMH,SAASW,KAChBI,GACbmB,EAAI8P,SAAS/N,EAAKlD,OAAS,EAC3BuR,EAAaF,EAASnG,cAAc,iBAAmB/J,EAAI,MAEjDkQ,EAASP,iBAAiB,cAClC7N,SAAQ,SAAAuO,GAAG,OAAIA,EAAIpF,UAAUC,OAAO,KAAK,IAEjDwE,EAAS5N,SAAQ,SAAAuO,GAAG,OAAIA,EAAIpF,UAAUC,OAAO,UAAU,IACvDkF,EAAWnF,UAAUE,IAAI,WAEzB,IAAMmF,EAAMF,EAAWG,UACjBC,EAAaN,EAASO,aAC5BP,EAASQ,SAAS,CAChBC,SAAU,SACVC,KAAM,EACNN,IAAKA,EAAME,EAAW,IAGxBjS,QAAQC,IAAIuD,EACd,E,gBAxDO,SAAuB8O,GAE5B,GADanS,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKJ,KAEnC,OAIF,IADiB6J,EAAAA,QAAKC,QAAQE,MAE5B,OAGF,IAAMjJ,EAAQlD,EAAAA,QAAMT,MAAMH,SAASW,KACnC,IAAMmD,IAASA,EAAMjC,OACnB,OAGFkR,GAA4B,IAC5B,IAAK,IAAI7Q,EAAE,EAAGA,EAAE4B,EAAMjC,OAAQK,IAC5B,GAAI6Q,EAAcjP,EAAM5B,GAAGmC,WAAa0O,EAAcjP,EAAM5B,GAAGoC,QAAS,EACtE,EAAA3C,EAAAA,SAAQO,GACR,KACF,CAEJ,EA5BA,UACA,SACA,YACA,WAAsB,mD,6ECAf,WACL0K,EAAAA,QAAKiD,KAAKlO,SAAU,EAAAmL,EAAAA,SAAQ,gBAC5BF,EAAAA,QAAKiD,KAAKzM,UAAW,EAAA0J,EAAAA,SAAQ,gBAC/B,E,YAEO,SAAmBnL,EAASyB,GACjC,IAAMkP,EAAa1F,EAAAA,QAAKiD,KAAKlO,QACvBqR,EAAcpG,EAAAA,QAAKiD,KAAKzM,SAE9B,IAAqBzB,EAAO,GAArBsR,EAAE,KAAEC,EAAE,KAAEC,EAAE,KACjB,IAAqB/P,EAAQ,GAAtBgQ,EAAE,KAAEC,EAAE,KAAEC,EAAE,KAGfhB,EAAWjE,UADT,MAAQ4E,EACa,SAAH,OAAYC,EAAE,wBAAgBC,EAAE,WAE7B,SAAH,OAAYF,EAAE,wBAAgBC,EAAE,yBAAiBC,EAAE,WAIvEH,EAAY3E,UADV,MAAQ+E,EACc,SAAH,OAAYC,EAAE,wBAAgBC,EAAE,WAE7B,SAAH,OAAYF,EAAE,wBAAgBC,EAAE,yBAAiBC,EAAE,UAE5E,EA1BA,IACsB,EADtB,QACA,GAAsB,EAAtB,QAAsB,0jC,iTCEP,SAASnT,GACtBA,EAAMoT,iBAAiB,iBAAgB,YAAE,8EACvC9S,QAAQC,IAAI,qBACZ,EAAA8S,EAAAA,gBACA,EAAAC,EAAAA,eAAc,2CACb,CAAEC,MAAM,IAEXvT,EAAMoT,iBAAiB,iBAAgB,YAAE,8EACvC9S,QAAQC,IAAI,oBAAmB,2CAEnC,EAbA,aACA,SAAiD,aAAjD,8lGAAAwB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAYC,mB,2ECNc,WACb,IAAMyR,EAAU/G,EAAAA,QAAKvL,QAAQ9B,KACvBuS,EAAUlF,EAAAA,QAAKvL,QAAQE,KACvBwQ,GAAU,EAAAjF,EAAAA,SAAQ,cAAe6G,GACjCC,GAAa,EAAA9G,EAAAA,SAAQ,eAAgB6G,GACrCE,GAAU,EAAA/G,EAAAA,SAAQ,OAAQ6G,GAC1BG,GAAU,EAAAhH,EAAAA,SAAQ,OAAQ6G,GAChC7B,EAAQyB,iBAAiB,SAAS,WAC5B3S,EAAAA,QAAMS,QAAQC,SAChB,EAAAN,EAAAA,UAEA,EAAAO,EAAAA,OAEJ,IACAwQ,EAAQwB,iBAAiB,SAAS,WACjB3S,EAAAA,QAAMS,QAAQyB,KAAKnC,KAAKoC,MAErCnC,EAAAA,QAAMS,QAAQyB,KAAKnC,KAAKoC,MAAO,EAC/BgC,KAAKoI,UAAUC,OAAO,MACtBrI,KAAKoI,UAAUE,IAAI,SAEnBzM,EAAAA,QAAMS,QAAQyB,KAAKnC,KAAKoC,MAAO,EAC/BgC,KAAKoI,UAAUC,OAAO,OACtBrI,KAAKoI,UAAUE,IAAI,MAEvB,IACAuG,EAAWL,iBAAiB,SAAS,WAEnC,GADkB3S,EAAAA,QAAMC,SAASe,QAAQC,OAEvCjB,EAAAA,QAAMC,SAASe,QAAU,GACzBmD,KAAKoI,UAAUC,OAAO,MACtBrI,KAAKoI,UAAUE,IAAI,YAGnB,GADkBzM,EAAAA,QAAMS,QAAQC,QAE9BV,EAAAA,QAAMC,SAASe,SAAU,EAAAA,EAAAA,WACzBmD,KAAKoI,UAAUC,OAAO,OACtBrI,KAAKoI,UAAUE,IAAI,UACd,CACLzM,EAAAA,QAAMC,SAASe,SAAU,EAAAA,EAAAA,WACzBmD,KAAKoI,UAAUC,OAAO,OACtBrI,KAAKoI,UAAUE,IAAI,MACnB,IAAMnL,EAAItB,EAAAA,QAAMC,SAASe,QAAQ,GACjChB,EAAAA,QAAMC,SAASE,MAAQmB,GACvB,EAAAC,EAAAA,cAAaD,EACf,CAEJ,IACA2R,EAAQN,iBAAiB,SAAS,WAChC,IAAM1S,EAAWD,EAAAA,QAAMC,SAASC,MAC1BC,GAAQ,EAAAiB,EAAAA,QACRlC,EAAOe,EAASE,IACtB,EAAAV,EAAAA,MAAKP,GACLc,EAAAA,QAAMC,SAASE,MAAQA,GACvB,EAAAQ,EAAAA,OACF,IACAuS,EAAQP,iBAAiB,SAAS,WAChC,IAAM1S,EAAWD,EAAAA,QAAMC,SAASC,MAC1BC,GAAQ,EAAAkB,EAAAA,QACRnC,EAAOe,EAASE,IACtB,EAAAV,EAAAA,MAAKP,GACLc,EAAAA,QAAMC,SAASE,MAAQA,GACvB,EAAAQ,EAAAA,OACF,GACF,EAvEA,YACA,SACA,SACA,WACA,YACA,WAAmC,mDAkElC,mB,2ECnEc,WACb,IAG2B,EAFrBqQ,EADUhF,EAAAA,QAAKC,QAAQhM,SACJgR,iBAAiB,SACpChR,EAAWD,EAAAA,QAAMC,SAASC,MAAM,EALL,w6BAKK,CACnB8Q,GAAQ,qBAAE,IAAlB3N,EAAI,QACPlD,EAAQiR,SAAS/N,EAAKgO,QAAQ/P,GAC9B4P,EAAU7N,EAAKgI,cAAc,uBAC7B8F,EAAU9N,EAAKgI,cAAc,oBACnC6F,EAAQyB,iBAAiB,SAAS,WAChC,IAAMjS,EAAUV,EAAAA,QAAMS,QAAQC,QACxBK,EAAUf,EAAAA,QAAMC,SAASE,MAC/B,GAAIA,IAAUY,EACRL,GACF,EAAAN,EAAAA,UAEA,EAAAO,EAAAA,YAEG,CACL,IAAMzB,EAAOe,EAASE,IACtB,EAAAV,EAAAA,MAAKP,GACLc,EAAAA,QAAMC,SAASE,MAAQA,GACvB,EAAAQ,EAAAA,OACF,CACF,IACAwQ,EAAQwB,iBAAiB,SAAS,WAChC,IAAMQ,EAAUnT,EAAAA,QAAMS,QAAQyB,KAAKE,MAAMD,KACnCpB,EAAUf,EAAAA,QAAMC,SAASE,MACzBO,EAAUV,EAAAA,QAAMS,QAAQC,QAC9B,GAAIP,IAAUY,EACPL,IACH,EAAAC,EAAAA,QAEEwS,GACFhP,KAAKoI,UAAUC,OAAO,MACtBxM,EAAAA,QAAMS,QAAQyB,KAAKE,MAAMD,MAAO,IAEhCgC,KAAKoI,UAAUE,IAAI,MACnBzM,EAAAA,QAAMS,QAAQyB,KAAKE,MAAMD,MAAO,OAE7B,CACL,IAAMjD,EAAOe,EAASE,IACtB,EAAAV,EAAAA,MAAKP,GACLc,EAAAA,QAAMC,SAASE,MAAQA,EACvBgE,KAAKoI,UAAUE,IAAI,MACnBzM,EAAAA,QAAMS,QAAQyB,KAAKE,MAAMD,MAAO,GAChC,EAAAxB,EAAAA,OACF,CACF,GACF,EA5CA,IAAK,EAAL,wBA4CC,+BACH,EArDA,aACA,YACA,WAAmC,6JAmDlC,mB,2EChDc,WACIqL,EAAAA,QAAKkD,SAASG,MACtBsD,iBAAiB,SAAS,WACjC,IAAMS,EAAYpT,EAAAA,QAAMT,MAAMiD,UAAY2B,KAAKjE,MAAQ,KACvDX,EAAAA,MAAM4S,YAAciB,GACpB,EAAAC,EAAAA,gBAAeD,EACjB,GACF,EAZA,WACA,SACA,YACA,WAAmC,mDASlC,mB,0EC2Cc,WACb,IAG2B,EAFyB,IADnCpH,EAAAA,QAAKC,QAAQE,MACJ8E,iBAAiB,UAEhB,qBAAE,IAAlB5N,EAAI,QACPiQ,EAAcjQ,EAAKgI,cAAc,sBACjCkI,EAAclQ,EAAKgI,cAAc,sBAEvCiI,EAAYX,iBAAiB,SAAS,WACpCa,EAAanQ,EACf,IACAkQ,EAAYZ,iBAAiB,SAAS,WACpCa,EAAanQ,EAAM,OACrB,GACF,EAVA,IAAK,EAAL,wBAUC,+BACH,EAtEA,WACA,SACA,WACA,YAAsC,ukCAEtC,SAASmQ,EAAanQ,EAAMoQ,GAC1B,IAAMrU,EAAWY,EAAAA,QAAMT,MAAMH,SAASW,KAChCI,EAAQiR,SAAS/N,EAAKgO,QAAQ/P,GAC9BkQ,EAAWxF,EAAAA,QAAKC,QAAQE,MACxBjN,EAAOE,EAASe,GAChBsD,EAAYvE,EAAKuE,UAQvB,GANIzD,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKJ,OAC1BnC,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKJ,MAAO,EAC/BnC,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKF,OAAS,EACjCrC,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKD,KAAO,GAG7BmR,EAAQ,CACV,IAAMF,EAAclQ,EAAKgI,cAAc,sBACvC,GAAIkI,EAAYhH,UAAUmH,SAAS,MAEjC,YADAH,EAAYhH,UAAUC,OAAO,MAG7B,IAAM9I,EAAUxE,EAAKwE,QACrB1D,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKJ,MAAO,EAC/BnC,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKF,MAAQoB,EAChCzD,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKD,IAAMoB,CAElC,CAEA,IAGyB,EAHnBwN,EAAUM,EAASP,iBAAiB,cACpCE,EAAUK,EAASP,iBAAiB,cACpC0C,EAAUnC,EAASP,iBAAiB,SAAS,IACjCC,GAAO,IAAzB,IAAK,EAAL,qBAA2B,CAAb,QAAiB3E,UAAUC,OAAO,KAAK,CAAC,mCAC7B,EAD6B,IACpC2E,GAAO,IAAzB,IAAK,EAAL,qBAA2B,CAAb,QAAiB5E,UAAUC,OAAO,KAAK,CAAC,mCAC7B,EAD6B,IACpCmH,GAAO,IAAzB,IAAK,EAAL,qBAA2B,CAAb,QAAiBpH,UAAUC,OAAO,UAAU,CAAC,gCAC3DnJ,EAAKkJ,UAAUE,IAAI,WAEfgH,GACkBpQ,EAAKgI,cAAc,sBAC3BkB,UAAUE,IAAI,OAENpJ,EAAKgI,cAAc,sBAC3BkB,UAAUE,IAAI,MAC1BzM,EAAAA,QAAMT,MAAMH,SAASqD,OAAQ,GAG/BlD,EAAAA,MAAM4S,YAAc1O,EAAY,KAChC,EAAA4P,EAAAA,gBAAe5P,GACVzD,EAAAA,QAAMS,QAAQC,UACjB,EAAAC,EAAAA,OAEJ,CAiBC,mB,2ECnEc,WACb,IAAMiT,EAAa5H,EAAAA,QAAKC,QAAQtN,KAC1BkV,EAAUD,EAAW3C,iBAAiB,YAE5C4C,EAAQzQ,SAAQ,SAAAuO,GACdA,EAAIgB,iBAAiB,SAAS,WAC5B,IAAIxO,KAAKoI,UAAUmH,SAAS,MAA5B,CAGA,IAAMvT,EAAQgE,KAAKkN,QAAQlR,MACrB2T,EAAaF,EAAW3C,iBAAiB,gBACzC8C,EAAYD,EAAW3T,GAC7B0T,EAAQzQ,SAAQ,SAAAsF,GAAC,OAAIA,EAAE6D,UAAUC,OAAO,KAAK,IAC7CrI,KAAKoI,UAAUE,IAAI,MACnBqH,EAAW1Q,SAAQ,SAAAsF,GAAC,OAAIA,EAAE6D,UAAUE,IAAI,OAAO,IAC/CsH,EAAUxH,UAAUC,OAAO,OAP3B,CAQF,GACF,GACF,EArBA,cACA,WAAmC,mDAoBlC,mB,2EChBc,WACb,IAAME,EAAYV,EAAAA,QAAKvL,QAAQwB,OAAOmK,OAChCO,EAAUX,EAAAA,QAAKvL,QAAQwB,OAAOoK,KACpCK,EAAUiG,iBAAiB,SAAS,WAClC,IAAMzS,EAAQkR,SAASjN,KAAKjE,OACtB+B,EAAS/B,EAAQ,IACT,IAAVA,GACFyM,EAAQJ,UAAUE,IAAI,SACtBzM,EAAAA,QAAMS,QAAQuB,OAAQ,GAEtB2K,EAAQJ,UAAUC,OAAO,SAE3BjN,EAAAA,MAAM0C,OAASA,EACfjC,EAAAA,QAAMS,QAAQwB,OAASA,CACzB,IACA0K,EAAQgG,iBAAiB,SAAS,WAEhC,GADc3S,EAAAA,QAAMS,QAAQuB,MACjB,CACTmC,KAAKoI,UAAUC,OAAO,SACtBxM,EAAAA,QAAMS,QAAQuB,OAAQ,EACtB,IAAMC,EAASjC,EAAAA,QAAMS,QAAQwB,OACzBA,EAAS,EACX1C,EAAAA,MAAM0C,OAASA,GAEf1C,EAAAA,MAAM0C,OAAS,GACfjC,EAAAA,QAAMS,QAAQwB,OAAS,IACvB,EAAA2Q,EAAAA,aAAY,IAEhB,MACEzO,KAAKoI,UAAUE,IAAI,SACnBzM,EAAAA,QAAMS,QAAQuB,OAAQ,EACtBzC,EAAAA,MAAM0C,OAAS,CAEnB,GACF,EAvCA,aACA,SACA,YACA,WAAmC,mDAoClC,mB,2ECnCc,SAAS1C,GACtBA,EAAMoT,iBAAiB,SAAS,WAC9B,IAAMqB,EAAWhU,EAAAA,QAAMS,QAAQyB,KAAKnC,KAAKoC,KACnC8R,EAAYjU,EAAAA,QAAMS,QAAQyB,KAAKE,MAAMD,KACrC+R,EAAWlU,EAAAA,QAAMS,QAAQyB,KAAKK,KAAKJ,KACnClC,EAAWD,EAAAA,QAAMC,SAASC,MAChC,IAAIgU,EACJ,GAAID,EACF1U,EAAM4S,YAAc,GACpB,EAAAxR,EAAAA,aAGA,IADe,EAAAwT,EAAAA,aACAH,GACb,EAAA5T,EAAAA,aACK,CACL,IAAMgU,GAAa,EAAAhT,EAAAA,QACblC,EAAOe,EAASmU,IACtB,EAAA3U,EAAAA,MAAKP,GACLc,EAAAA,QAAMC,SAASE,MAAQiU,GACvB,EAAAzT,EAAAA,OACF,CAEJ,GACF,EA3BA,IAEmC,EAFnC,SACA,SACA,GAAmC,EAAnC,SAAmC,2BAyBlC,mB,+ECxBM,WACL,IAAMI,EAAUxB,EAAAA,MAAM4S,YAEd5P,EADKvC,EAAAA,QAAMS,QAAQyB,KACnBK,KACAJ,EAAqBI,EAArBJ,KAAME,EAAeE,EAAfF,MAAOC,EAAQC,EAARD,IAEjBH,IAAS,IAAME,IAAU,IAAMC,GAClB,IAAVvB,EAAkBuB,IACrB/C,EAAAA,MAAM4S,YAAc9P,EAAQ,IAGlC,EAdA,IACsC,EADtC,SACA,GAAsC,EAAtC,SAAsC,0B,gFCQ/B,SAAwBgS,EAAaC,GAC1C,IAAMvT,EAAUsT,GAAe9U,EAAAA,MAAM4S,YAC/B3P,EAAW8R,GAAgB/U,EAAAA,MAAMiD,SACvC,GAAI+R,MAAMxT,IAAYwT,MAAM/R,GAC1B,OAEFxC,EAAAA,QAAMT,MAAMiD,SAAWA,EAGvB,IAAM2P,GAAc,EAAAqC,EAAAA,SAAYzT,GAC1B0T,GAAe,EAAAD,EAAAA,SAAYhS,IACjC,EAAAkS,EAAAA,WAAUvC,EAAasC,GAGvB,IAAME,EAAOpV,EAAAA,MAAM4P,SAASlO,OAAS,EACrC,GAAI0T,GAAQ,EAAG,CACb,IAAMxF,EAAW5P,EAAAA,MAAM4P,SAAS7M,IAAIqS,IACpC,EAAAC,EAAAA,wBAAuBzF,EAAU3M,EACnC,EACA,EAAAqS,EAAAA,sBAAqB9T,EAASyB,EAChC,EA7BA,aAIA,SACA,YACA,SACA,YAAsC,mD,2ECKvB,YACb,EAAAsS,EAAAA,SAAevV,EAAAA,QACf,EAAAwV,EAAAA,SAAWxV,EAAAA,QACX,EAAA2P,EAAAA,SAAS3P,EAAAA,QACT,EAAAyV,EAAAA,SAAMzV,EAAAA,QACN,EAAA0V,EAAAA,SAAO1V,EAAAA,QAEP,EAAA2V,EAAAA,YACA,EAAAC,EAAAA,YACA,EAAAC,EAAAA,YACA,EAAAC,EAAAA,UACF,EAvBA,gBACA,YACA,YACA,YAEA,YACA,YACA,YACA,YACA,YACA,SAAiC,mDAahC,mB,2ECrBc,SAAS9V,GACtBA,EAAMoT,iBAAiB,YAAY,YACjC,EAAAU,EAAAA,iBACF,GACF,EANA,WAMC,mB,2ECFc,SAAS9T,GACtBA,EAAMoT,iBAAiB,cAAc,YACnC,EAAAU,EAAAA,mBACA,EAAAiC,EAAAA,eAAc/V,EAAM4S,cACpB,EAAAoD,EAAAA,cACF,GACF,EAVA,aACA,OACA,SAQC,mB,2ECRc,SAAShW,GACtBA,EAAMoT,iBAAiB,QAAQ,WAC7B,IAAM9F,EAAa,IAAI2I,EAAAA,WACjBhQ,EAAc,IAAIiQ,EAAAA,YAAYlW,GACpCsN,EAAW3B,KAAK,CACdI,YAAa,oBACb9F,YAAaA,GAEjB,GAAG,CAAEsN,MAAM,GACb,EAXA,aAWC,mB,2ECVD,SAOsC,GAAD,gCARrC,gBACA,YACA,SAGA,WACA,OAAuC,sSALvC,8lGAAAxR,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAOqC,aAMpC,OANoC,cAAtB,WAAuBG,GAAO,iEAE7B,OADd,EAAAiU,EAAAA,SAAcjU,IACd,EAAAkU,EAAAA,WAAc,UACR,EAAAC,EAAAA,eAAcnU,GAAQ,OAE5B5B,QAAQC,IAAIkM,EAAAA,SAAM,4CACnB,yC,0ECZM,SAAiB6J,EAAM9J,GAE5B,OADAA,EAAUA,GAAWC,EAAAA,QAAKrN,MACX0M,cAAc,IAAMwK,EACrC,EALA,IAAgC,EAAhC,GAAgC,EAAhC,QAAgC,0B,0ECEjB,WAGb,IAFA,IACMC,EADW9V,EAAAA,QAAMC,SAASC,MACTyQ,KAAI,SAACoF,EAAGzU,GAAC,OAAKA,CAAC,IAC7BA,EAAIwU,EAAM7U,OAAS,EAAGK,EAAI,EAAGA,IAAK,CACzC,IAAM0U,EAAI3P,KAAK4P,MAAM5P,KAAK4D,UAAY3I,EAAI,IAAI,EACvB,CAACwU,EAAME,GAAIF,EAAMxU,IAAvCwU,EAAMxU,GAAE,KAAEwU,EAAME,GAAE,IACrB,CAEA,OADAnW,QAAQC,IAAIgW,GACLA,CACT,EAXA,IAAmC,EAAnC,GAAmC,EAAnC,SAAmC,2BAWlC,mB,yECXc,SAAS7G,GACtB,IAAIiH,EAAU7P,KAAK4P,MAAMhH,EAAO,IAC5BiH,EAAU,KACZA,EAAU,IAAMA,GAElB,IAAIC,EAAU9P,KAAK4P,MAAMhH,EAAO,IAC5BkH,EAAU,KACZA,EAAU,IAAMA,GAElB,IAAIC,EAAQ,KACRD,GAAW,KACbC,EAAQ/P,KAAK4P,MAAME,EAAU,IAC7BA,GAAoB,IAEtB,IAAME,EAAWjF,SAASgF,GACtBC,EAAW,GAAKA,EAAW,KAC7BD,EAAQ,IAAMA,GAEhB,MAAO,CAACA,EAAOD,EAASD,EAC1B,EAAC,mB,GClBGI,EAA2B,CAAC,ECEhC,IAAIC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBjV,IAAjBkV,EACH,OAAOA,EAAa7X,QAGrB,IAAIC,EAASwX,EAAyBG,GAAY,CAGjD5X,QAAS,CAAC,GAOX,OAHA8X,EAAoBF,GAAU3X,EAAQA,EAAOD,QAAS2X,GAG/C1X,EAAOD,OACf,CCnB0B2X,CAAoB,K,UnCO9C","sources":["webpack://Player5/webpack/universalModuleDefinition","webpack://Player5/./src/audio/index.js","webpack://Player5/./src/audio/playlist.js","webpack://Player5/./src/audio/state.js","webpack://Player5/./src/audio/subtitle.js","webpack://Player5/./src/audio/vision.js","webpack://Player5/./src/elements/content.js","webpack://Player5/./src/elements/control.js","webpack://Player5/./src/elements/effect.js","webpack://Player5/./src/elements/index.js","webpack://Player5/./src/elements/init.js","webpack://Player5/./src/elements/meta.js","webpack://Player5/./src/elements/playlist.js","webpack://Player5/./src/elements/progress.js","webpack://Player5/./src/elements/subtitle.js","webpack://Player5/./src/elements/time.js","webpack://Player5/./src/event/canplaythrough.js","webpack://Player5/./src/event/elements/play.js","webpack://Player5/./src/event/elements/playlist.js","webpack://Player5/./src/event/elements/slider.js","webpack://Player5/./src/event/elements/subtitle.js","webpack://Player5/./src/event/elements/tabs.js","webpack://Player5/./src/event/elements/volume.js","webpack://Player5/./src/event/ended.js","webpack://Player5/./src/event/fn/loop.js","webpack://Player5/./src/event/fn/sync.js","webpack://Player5/./src/event/index.js","webpack://Player5/./src/event/progress.js","webpack://Player5/./src/event/timeupdate.js","webpack://Player5/./src/event/vision.js","webpack://Player5/./src/player5.js","webpack://Player5/./src/tools/elm.js","webpack://Player5/./src/tools/shuffle.js","webpack://Player5/./src/tools/time.js","webpack://Player5/webpack/bootstrap","webpack://Player5/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Player5\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Player5\"] = factory();\n\telse\n\t\troot[\"Player5\"] = factory();\n})(self, () => {\nreturn ","import { \n  sync_playart, \n  load_playart,\n  wave_build \n} from \"../elements/effect\";\nimport { sync_control } from \"../elements/control\";\nimport { sync_meta } from \"../elements/meta\";\nimport { sync_playlist } from \"../elements/playlist\";\nimport State from \"./state\";\nimport subtitle from \"./subtitle\";\n\nexport const audio = new Audio();\n\nexport const context = new AudioContext();\n\nexport function load(item) {\n  const srcSubtitle = item.subtitle;\n  const srcAudio = item.url;\n  audio.src = srcAudio;\n  audio.load();\n  subtitle(srcSubtitle);\n  sync_meta(item);\n  wave_build(srcAudio).then(() => {\n    console.log('wave build completly');\n  });\n}\n\nexport function play() {\n  //audio.play().then(() => {\n  //  sync_playart(true);\n  //  sync_control(true);\n  //  sync_playlist(true);\n  //  State.control.playing = true;\n  //});\n  audio.play();\n  sync_playart(true);\n  sync_control(true);\n  sync_playlist(true);\n  State.control.playing = true;\n}\n\nexport function pause() {\n  const list = State.playlist.value;\n  const index = State.playlist.index;\n  const item = list[index];\n  audio.pause();\n  sync_playart(false);\n  sync_control(false);\n  sync_playlist(false);\n  load_playart(item);\n  State.control.playing = false;\n}\n\n\n\n","import event_playlist from \"../event/elements/playlist\"\nimport { build_playlist } from \"../elements/playlist\";\nimport { sync_volume } from \"../elements/control\";\nimport { load } from \"./\";\nimport State from \"./state\";\n\nexport function load_default(index) {\n  const playlist = State.playlist.value;\n  const current = index === undefined ? State.playlist.index : index;\n  const item = playlist[current];\n\n  load(item);\n}\n\nexport async function init_playlist(options) {\n  const url = options.playListURL;\n  const response = await fetch(url);\n  const json = await response.json();\n  State.playlist.value = json.playlist;\n  build_playlist(json.playlist);\n  event_playlist();\n  load_default();\n}\n\nexport function shuffle() {\n\n}\n\nexport function next() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    const next = index + 1;\n    const i = next > length - 1 ? 0 : next;\n    return shuffle[i];\n  } else {\n    const next = current + 1;\n    const i = next > length - 1 ? 0 : next;\n    return i;\n  }\n}\n\nexport function prev() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    const prev = index - 1;\n    const i = prev > - 1 ? prev : length - 1;\n    return shuffle[i];\n  } else {\n    const prev = current - 1;\n    const i = prev > - 1 ? prev : length - 1;\n    return i;\n  }\n}\n\nexport function is_last() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    return index === length - 1;\n  } else {\n    return current === length - 1;\n  }\n}\n\nexport function is_first() {\n  const current = State.playlist.index;\n  const array = State.playlist.value;\n  const length = array.length;\n  const shuffle = State.playlist.shuffle;\n  const isShuffle = shuffle.length;\n\n  if (isShuffle) {\n    const index = shuffle.indexOf(current);\n    return index === 0;\n  } else {\n    return current === 0;\n  }\n}\n\n","module.exports = {\n  control: {\n    playing: false,\n    muted: false,\n    volume: 0.5,\n    loop: {\n      list: {\n        flag: false\n      },\n      whole: {\n        flag: false,\n        start: -1,\n        end: -1\n      },\n      part: {\n        flag: false,\n        start: -1,\n        end: -1\n      }\n    } \n  },\n  audio: {\n    duration: 0,\n    subtitle: {\n      click: false,\n      list: [],\n      current: -1\n    } \n  },\n  effect: {\n    sample: {\n      rate: 50\n    }\n  },\n  playlist: {\n    index: 0,\n    shuffle: [],\n    value: []\n  }\n}\n\n","import event_subtitle from \"../event/elements/subtitle\";\nimport {\n  sync_current, \n  build_subtitle\n} from \"../elements/subtitle\";\nimport State from \"./state\";\n\nfunction millisecond(hmsms) {\n  const [h, m, s, ms] = hmsms.split(/[:,]/);\n  return ((+h*60*60) + (+m*60) + (+s)) * 1000 + (+ms);\n}\n\nfunction extract(lines) {\n  const subtitles = [];\n  let subtitle = {};\n\n  lines.forEach((line, index) => {\n    if (!line.trim().length) return;\n    if (Number.isInteger(+line)) {\n      subtitle = {};\n      subtitle.index = +line;\n      return;\n    }\n    if (!subtitle.startTime) {\n      const [startTime, endTime] = line.split(' --> ');\n      subtitle.startTime = millisecond(startTime);\n      subtitle.endTime = millisecond(endTime);\n      return \n    } \n\n    if (subtitle.text) {\n      subtitle.text = (subtitle.text || '') + '<br>' + line;\n      return;\n    } else {\n      subtitle.text = line;\n    }\n    subtitles.push(subtitle);\n  });\n  return subtitles;\n}\n\nexport default async function(url) {\n  if (!url) {\n    build_subtitle([]);\n    State.audio.subtitle.list = [];\n    return;\n  }\n  const res = await fetch(url);\n  const text = await res.text();\n  const raw_lines = text.split(/\\r?\\n/);\n  const txt_lines = extract(raw_lines);\n  build_subtitle(txt_lines);\n  State.audio.subtitle.list = txt_lines;\n  event_subtitle();\n}\n\nexport function current(index) {\n  if (State.audio.subtitle.current !== index) {\n    State.audio.subtitle.current = index;\n    sync_current(index);\n  }\n}\n\nexport function reset() {\n  State.audio.subtitle.current = -1;\n  State.audio.subtitle.list = [];\n}\n\nexport function recover() {\n  State.audio.subtitle.current = -1;\n}\n","/**\n * The AudioSource object creates an analyzer node, sets up a repeating function with setInterval\n * which samples the input and turns it into an FFT array. The object has two properties:\n * streamData - this is the Uint8Array containing the FFT data\n * volume - cumulative value of all the bins of the streaData.\n */\nexport const AudioSource = function(audio) {\n  const self = this;\n  this.volume = 0;\n  this.streamData = new Uint8Array(128);\n  let analyser;\n\n  const sampleAudioStream = function() {\n    analyser.getByteFrequencyData(self.streamData);\n    // calculate an overall volume value\n    let total = 0;\n    for(let i in self.streamData) {\n      total += self.streamData[i];\n    }\n    self.volume = total;\n    requestAnimationFrame(sampleAudioStream);\n  };\n\n  const audioCtx = new AudioContext();\n  const mic = audioCtx.createMediaElementSource(audio);\n  analyser= audioCtx.createAnalyser();\n  analyser.fftSize = 256;\n  mic.connect(analyser);\n  analyser.connect(audioCtx.destination);\n  sampleAudioStream();\n};\n\n/**\n * The Visualizer object, after being instantiated, must be initialized with the init() method,\n * which takes an options object specifying the canvases to work on and the audiosource which will\n * provide the data to be visualized.\n */\nexport const Visualizer = function() {\n    let tileSize;\n    let tiles = [];\n    let stars = [];\n    // canvas vars\n    let fgCanvas;\n    let fgCtx;\n    let fgRotation = 0.001;\n    let bgCanvas;\n    let bgCtx;\n    let sfCanvas;\n    let sfCtx;\n    let audioSource;\n\n  function Polygon(sides, x, y, tileSize, ctx, num) {\n    this.sides = sides;\n    this.tileSize = tileSize;\n    this.ctx = ctx;\n    this.num = num; // the number of the tile, starting at 0\n    this.high = 0; // the highest colour value, which then fades out\n    this.decay = this.num > 42 ? 1.5 : 2; // increase this value to fade out faster.\n    this.highlight = 0; // for highlighted stroke effect;\n    // figure out the x and y coordinates of the center of the polygon based on the\n    // 60 degree XY axis coordinates passed in\n    const step = Math.round(Math.cos(Math.PI/6)*tileSize*2);\n    this.y = Math.round(step * Math.sin(Math.PI/3) * -y  );\n    this.x = Math.round(x * step + y * step/2 );\n\n    // calculate the vertices of the polygon\n    this.vertices = [];\n    for (let i = 1; i <= this.sides;i += 1) {\n      x = this.x + this.tileSize * Math.cos(i * 2 * Math.PI / this.sides + Math.PI/6);\n      y = this.y + this.tileSize * Math.sin(i * 2 * Math.PI / this.sides + Math.PI/6);\n      this.vertices.push([x, y]);\n    }\n  }\n\n  Polygon.prototype.rotateVertices = function() {\n    // rotate all the vertices to achieve the overall rotational effect\n    let rotation = fgRotation;\n    rotation -= audioSource.volume > 10000 ? Math.sin(audioSource.volume/800000) : 0;\n    for (let i = 0; i <= this.sides-1;i += 1) {\n      this.vertices[i][0] = this.vertices[i][0] - this.vertices[i][1] * Math.sin(rotation);\n      this.vertices[i][1] = this.vertices[i][1] + this.vertices[i][0] * Math.sin(rotation);\n    }\n  };\n\n  Polygon.prototype.calculateOffset = function(coords) {\n    const angle = Math.atan(coords[1]/coords[0]);\n    const distance = Math.sqrt(Math.pow(coords[0], 2) + Math.pow(coords[1], 2)); // a bit of pythagoras\n    const mentalFactor = Math.min(Math.max((Math.tan(audioSource.volume/6000) * 0.5), -20), 2); // this factor makes the visualization go crazy wild\n    const offsetFactor = Math.pow(distance/3, 2) * (audioSource.volume/2000000) * (Math.pow(this.high, 1.3)/300) * mentalFactor;\n    let offsetX = Math.cos(angle) * offsetFactor;\n    let offsetY = Math.sin(angle) * offsetFactor;\n    offsetX *= (coords[0] < 0) ? -1 : 1;\n    offsetY *= (coords[0] < 0) ? -1 : 1;\n    return [offsetX, offsetY];\n  };\n\n  Polygon.prototype.drawPolygon = function() {\n    const bucket = Math.ceil(audioSource.streamData.length/tiles.length*this.num);\n    let val = Math.pow((audioSource.streamData[bucket]/255),2)*255;\n    val *= this.num > 42 ? 1.1 : 1;\n    // establish the value for this tile\n    if (val > this.high) {\n      this.high = val;\n    } else {\n      this.high -= this.decay;\n      val = this.high;\n    }\n\n    // figure out what colour to fill it and then draw the polygon\n    let r, g, b, a;\n    if (val > 0) {\n      this.ctx.beginPath();\n      let offset = this.calculateOffset(this.vertices[0]);\n      this.ctx.moveTo(this.vertices[0][0] + offset[0], this.vertices[0][1] + offset[1]);\n      // draw the polygon\n      for (let i = 1; i <= this.sides-1;i += 1) {\n        offset = this.calculateOffset(this.vertices[i]);\n        this.ctx.lineTo (this.vertices[i][0] + offset[0], this.vertices[i][1] + offset[1]);\n      }\n      this.ctx.closePath();\n\n      if (val > 128) {\n        r = (val-128)*2;\n        g = ((Math.cos((2*val/128*Math.PI/2)- 4*Math.PI/3)+1)*128);\n        b = (val-105)*3;\n      }\n      else if (val > 175) {\n        r = (val-128)*2;\n        g = 255;\n        b = (val-105)*3;\n      }\n      else {\n        r = ((Math.cos((2*val/128*Math.PI/2))+1)*128);\n        g = ((Math.cos((2*val/128*Math.PI/2)- 4*Math.PI/3)+1)*128);\n        b = ((Math.cos((2.4*val/128*Math.PI/2)- 2*Math.PI/3)+1)*128);\n      }\n      if (val > 210) {\n        this.cubed = val; // add the cube effect if it's really loud\n      }\n      if (val > 120) {\n        this.highlight = 100; // add the highlight effect if it's pretty loud\n      }\n      // set the alpha\n      const e = 2.7182;\n      a = (0.5/(1 + 40 * Math.pow(e, -val/8))) + (0.5/(1 + 40 * Math.pow(e, -val/20)));\n\n      this.ctx.fillStyle = \"rgba(\" +\n        Math.round(r) + \", \" +\n        Math.round(g) + \", \" +\n        Math.round(b) + \", \" +\n        a + \n      \")\";\n      this.ctx.fill();\n      // stroke\n      if (val > 20) {\n        const strokeVal = 20;\n        this.ctx.strokeStyle =  \"rgba(\" + strokeVal + \", \" + strokeVal + \", \" + strokeVal + \", 0.5)\";\n        this.ctx.lineWidth = 1;\n        this.ctx.stroke();\n      }\n    }\n  };\n\n  Polygon.prototype.drawHighlight = function() {\n    this.ctx.beginPath();\n    // draw the highlight\n    let offset = this.calculateOffset(this.vertices[0]);\n    this.ctx.moveTo(this.vertices[0][0] + offset[0], this.vertices[0][1] + offset[1]);\n    // draw the polygon\n    for (let i = 0; i <= this.sides-1;i += 1) {\n      offset = this.calculateOffset(this.vertices[i]);\n      this.ctx.lineTo (this.vertices[i][0] + offset[0], this.vertices[i][1] + offset[1]);\n    }\n    this.ctx.closePath();\n    const a = this.highlight/100;\n    this.ctx.strokeStyle =  \"rgba(255, 255, 255, \" + a + \")\";\n    this.ctx.lineWidth = 1;\n    this.ctx.stroke();\n    this.highlight -= 0.5;\n  };\n\n  const makePolygonArray = function() {\n    tiles = [];\n    /**\n     * Arrange into a grid x, y, with the y axis at 60 degrees to the x, rather than\n     * the usual 90.\n     * @type {number}\n     */\n    let i = 0; // unique number for each tile\n    tiles.push(new Polygon(6, 0, 0, tileSize, fgCtx, i)); // the centre tile\n    i++;\n    for (let layer = 1; layer < 7; layer++) {\n      tiles.push(new Polygon(6, 0, layer, tileSize, fgCtx, i)); i++;\n      tiles.push(new Polygon(6, 0, -layer, tileSize, fgCtx, i)); i++;\n      for(let x = 1; x < layer; x++) {\n        tiles.push(new Polygon(6, x, -layer, tileSize, fgCtx, i)); i++;\n        tiles.push(new Polygon(6, -x, layer, tileSize, fgCtx, i)); i++;\n        tiles.push(new Polygon(6, x, layer-x, tileSize, fgCtx, i)); i++;\n        tiles.push(new Polygon(6, -x, -layer+x, tileSize, fgCtx, i)); i++;\n      }\n      for(let y = -layer; y <= 0; y++) {\n        tiles.push(new Polygon(6, layer, y, tileSize, fgCtx, i)); i++;\n        tiles.push(new Polygon(6, -layer, -y, tileSize, fgCtx, i)); i++;\n      }\n    }\n  };\n\n  function Star(x, y, starSize, ctx) {\n    this.x = x;\n    this.y = y;\n    this.angle = Math.atan(Math.abs(y)/Math.abs(x));\n    this.starSize = starSize;\n    this.ctx = ctx;\n    this.high = 0;\n  }\n\n  Star.prototype.drawStar = function() {\n    const distanceFromCentre = Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n\n    // stars as lines\n    const brightness = 200 + Math.min(Math.round(this.high * 5), 55);\n    this.ctx.lineWidth= 0.5 + distanceFromCentre/2000 * Math.max(this.starSize/2, 1);\n    this.ctx.strokeStyle='rgba(' + brightness + ', ' + brightness + ', ' + brightness + ', 1)';\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.x,this.y);\n    const lengthFactor = 1 + Math.min(Math.pow(distanceFromCentre,2)/30000 * Math.pow(audioSource.volume, 2)/6000000, distanceFromCentre);\n    let toX = Math.cos(this.angle) * -lengthFactor;\n    let toY = Math.sin(this.angle) * -lengthFactor;\n    toX *= this.x > 0 ? 1 : -1;\n    toY *= this.y > 0 ? 1 : -1;\n    this.ctx.lineTo(this.x + toX, this.y + toY);\n    this.ctx.stroke();\n    this.ctx.closePath();\n\n    // starfield movement coming towards the camera\n    const speed = lengthFactor/20 * this.starSize;\n    this.high -= Math.max(this.high - 0.0001, 0);\n    if (speed > this.high) {\n      this.high = speed;\n    }\n    const dX = Math.cos(this.angle) * this.high;\n    const dY = Math.sin(this.angle) * this.high;\n    this.x += this.x > 0 ? dX : -dX;\n    this.y += this.y > 0 ? dY : -dY;\n\n    const limitY = fgCanvas.height/2 + 500;\n    const limitX = fgCanvas.width/2 + 500;\n    if ((this.y > limitY || this.y < -limitY) || (this.x > limitX || this.x < -limitX)) {\n      // it has gone off the edge so respawn it somewhere near the middle.\n      this.x = (Math.random() - 0.5) * fgCanvas.width/3;\n      this.y = (Math.random() - 0.5) * fgCanvas.height/3;\n      this.angle = Math.atan(Math.abs(this.y)/Math.abs(this.x));\n    }\n  };\n\n  const makeStarArray = function() {\n    let x, y, starSize;\n    stars = [];\n    const limit = fgCanvas.width / 15; // how many stars?\n    for (let i = 0; i < limit; i ++) {\n      x = (Math.random() - 0.5) * fgCanvas.width;\n      y = (Math.random() - 0.5) * fgCanvas.height;\n      starSize = (Math.random()+0.1)*3;\n      stars.push(new Star(x, y, starSize, sfCtx));\n    }\n  };\n\n  const drawBg = function() {\n    bgCtx.clearRect(0, 0, bgCanvas.width, bgCanvas.height);\n    const val = audioSource.volume/1000;\n    const r = 200 + (Math.sin(val) + 1) * 28;\n    const g = val * 2;\n    const b = val * 8;\n    const a = Math.sin(val+3*Math.PI/2) + 1;\n    bgCtx.beginPath();\n    bgCtx.rect(0, 0, bgCanvas.width, bgCanvas.height);\n    // create radial gradient\n    const grd = bgCtx.createRadialGradient(bgCanvas.width/2, bgCanvas.height/2, val, bgCanvas.width/2, bgCanvas.height/2, bgCanvas.width-Math.min(Math.pow(val, 2.7), bgCanvas.width - 20));\n    grd.addColorStop(0, 'rgba(0,0,0,0)');// centre is transparent black\n    grd.addColorStop(0.8, \"rgba(\" +\n      Math.round(r) + \", \" +\n      Math.round(g) + \", \" +\n      Math.round(b) +\n    \", 0.4)\"); // edges are reddish\n\n    bgCtx.fillStyle = grd;\n    bgCtx.fill();\n  };\n\n  this.resizeCanvas = function(width, height) {\n    if (fgCanvas) {\n      // resize the foreground canvas\n      fgCanvas.width = width;\n      fgCanvas.height = height;\n      fgCtx.translate(fgCanvas.width/2,fgCanvas.height/2);\n\n      // resize the bg canvas\n      bgCanvas.width = width;\n      bgCanvas.height = height;\n\n      // resize the starfield canvas\n      sfCanvas.width = width;\n      sfCanvas.height = height;\n      sfCtx.translate(fgCanvas.width/2,fgCanvas.height/2);\n\n      tileSize = fgCanvas.width > fgCanvas.height ? fgCanvas.width / 25 : fgCanvas.height / 25;\n\n      drawBg();\n      makePolygonArray();\n      makeStarArray();\n    }\n  };\n\n  const rotateForeground = function() {\n    tiles.forEach(function(tile) {\n      tile.rotateVertices();\n    });\n  };\n\n  const draw = function() {\n    fgCtx.clearRect(-fgCanvas.width, -fgCanvas.height, fgCanvas.width*2, fgCanvas.height *2);\n    sfCtx.clearRect(-fgCanvas.width/2, -fgCanvas.height/2, fgCanvas.width, fgCanvas.height);\n\n    stars.forEach(function(star) {\n      star.drawStar();\n    });\n    tiles.forEach(function(tile) {\n      tile.drawPolygon();\n    });\n    tiles.forEach(function(tile) {\n      if (tile.highlight > 0) {\n        tile.drawHighlight();\n      }\n    });\n    requestAnimationFrame(draw);\n  };\n\n  this.init = function(options) {\n    audioSource = options.audioSource;\n    const container = document.querySelector(options.containerId);\n    const height = container.offsetHeight;\n    const width = container.offsetWidth;\n    const style = 'position: absolute; top: 0; left: 0; '\n\n    // foreground hexagons layer\n    fgCanvas = document.createElement('canvas');\n    fgCanvas.setAttribute('style', style + 'z-index: 10');\n    fgCanvas.height = height;\n    fgCanvas.width = width;\n    fgCtx = fgCanvas.getContext(\"2d\");\n    container.appendChild(fgCanvas);\n\n    // middle starfield layer\n    sfCanvas = document.createElement('canvas');\n    sfCanvas.setAttribute('style', style + 'z-index: 5');\n    sfCanvas.height = height;\n    sfCanvas.width = width;\n    sfCtx = sfCanvas.getContext(\"2d\");\n    container.appendChild(sfCanvas);\n\n    // background image layer\n    bgCanvas = document.createElement('canvas');\n    bgCanvas.setAttribute('style', style + 'z-index: 1');\n    bgCanvas.height = height;\n    bgCanvas.width = width;\n    bgCtx = bgCanvas.getContext(\"2d\");\n    container.appendChild(bgCanvas);\n\n    this.resizeCanvas(width, height); \n    draw();\n\n    setInterval(drawBg, 100);\n    setInterval(rotateForeground, 20);\n    // resize the canvas to fill browser window dynamically\n    //const self = this;\n    //const resizeObserver = new ResizeObserver((entries) => {\n    //  for (let entry of entries) {\n    //    const height = container.offsetHeight;\n    //    const width = container.offsetWidth;\n    //    self.resizeCanvas(width, height);\n    //  }\n    //});\n    //resizeObserver.observe(container);\n  };\n};\n\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_content() {\n  const rootElm = Elms.content.root;\n  Elms.content.playlist = get_elm('playlist', rootElm);\n  Elms.content.essay = get_elm('essay', rootElm);\n}\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_control() {\n  Elms.control.root = get_elm('control-container');\n  Elms.control.play = get_elm('switch');\n  Elms.control.volume.slider = get_elm('volume-slider');\n  Elms.control.volume.icon = get_elm('volume-icon');\n}\n\nexport function sync_control(playing) {\n  const elmSwitch = Elms.control.play;\n  if (playing) {\n    elmSwitch.classList.remove('paused');\n    elmSwitch.classList.add('play');\n  } else {\n    elmSwitch.classList.remove('play');\n    elmSwitch.classList.add('paused');\n  }\n}\n\nexport function sync_volume(val) {\n  const elmSlider = Elms.control.volume.slider;\n  const elmIcon = Elms.control.volume.icon;\n  const value = parseFloat(val);\n  if (value === 0) {\n    elmIcon.classList.add('muted');\n  } else {\n    elmIcon.classList.remove('muted');\n  }\n  elmSlider.value = value * 100;\n}\n","import { get_elm } from \"../tools/elm\";\nimport { context } from \"../audio/\";\nimport State from \"../audio/state\";\nimport Elms from \"./\";\n\nfunction get_peaks(length, buffer) {\n  /*\n    Set the parameters needed to build the SVG.\n  */\n  const sampleSize = buffer.length / length;\n  const sampleStep = ~~(sampleSize / 10) || 1;\n  const numberOfChannels = buffer.numberOfChannels;\n  const mergedPeaks = [];\n\n  /*\n    Iterate over the channels and find the peaks.\n  */\n  for (\n    let channelNumber = 0;\n    channelNumber < numberOfChannels;\n    channelNumber++\n  ) {\n    /*\n      Initialize the peaks array and set the channel data to what\n      the buffer has in its channel data.\n    */\n    const peaks = [];\n    const channelData = buffer.getChannelData(channelNumber);\n\n    /*\n      Iterate over peaks with respect to the sample size.\n    */\n    for (let peakNumber = 0; peakNumber < length; peakNumber++) {\n      /*\n        Get the start and end peak.\n      */\n      const start = ~~(peakNumber * sampleSize);\n      const end = ~~(start + sampleSize);\n\n      /*\n        Set min and max to the channel data first peak.\n      */\n      let min = channelData[0];\n      let max = channelData[0];\n\n      /*\n        Iterate over the parts of the song starting to the\n        ending to display the waveform.\n      */\n      for (\n        let sampleIndex = start;\n        sampleIndex < end;\n        sampleIndex += sampleStep\n      ) {\n        const value = channelData[sampleIndex];\n\n        if (value > max) {\n          max = value;\n        }\n        if (value < min) {\n          min = value;\n        }\n      }\n\n      /*\n        Set the max and min for the peak.\n      */\n      peaks[2 * peakNumber] = max;\n      peaks[2 * peakNumber + 1] = min;\n\n      /*\n        Merge the peaks\n      */\n      if (channelNumber === 0 || max > mergedPeaks[2 * peakNumber]) {\n        mergedPeaks[2 * peakNumber] = max;\n      }\n\n      if (channelNumber === 0 || min < mergedPeaks[2 * peakNumber + 1]) {\n        mergedPeaks[2 * peakNumber + 1] = min;\n      }\n    }\n  }\n\n  /*\n    Returns the merged peaks.\n  */\n  return mergedPeaks;\n}\n\nfunction build_path(peaks) {\n  /*\n    Get the total peaks in the song.\n  */\n  const totalPeaks = peaks.length;\n\n  /*\n    Figure out the depth of the peak.\n  */\n  let d = \"\";\n  for (let peakNumber = 0; peakNumber < totalPeaks; peakNumber++) {\n    if (peakNumber % 2 === 0) {\n      d += ` M${~~(peakNumber / 2)}, ${peaks.shift()}`;\n    } else {\n      d += ` L${~~(peakNumber / 2)}, ${peaks.shift()}`;\n    }\n  }\n\n  return d;\n}\n\nexport function init_effect() {\n  Elms.effect.visualizer = get_elm('audio-visualizer');\n  Elms.effect.wave = get_elm('wave-form');\n  Elms.effect.playart = get_elm('workart-wrapper');\n}\n\nexport function sync_effect() {\n  const elmWave = Elms.effect.wave;\n  const sampleRate = State.effect.sample.rate;\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('viewBox', '0 -1 ' + sampleRate + ' 2');\n  svg.setAttribute('preserveAspectRatio', 'none');\n  const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  svg.appendChild(g);\n  const path = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'path'\n  );\n  path.setAttribute('d', '');\n  g.appendChild(path);\n  elmWave.innerHTML = '';\n  elmWave.appendChild(svg);\n}\n\nexport function wave_build(url) {\n  const elmWave = Elms.effect.wave;\n  const elmPath = elmWave.querySelector('svg g path');\n  elmPath && elmPath.setAttribute('d', '');\n  return new Promise((resolve, reject) => {\n    const elmWave = Elms.effect.wave;\n    const sampleRate = State.effect.sample.rate;\n    fetch(url)\n    .then(response => response.arrayBuffer())\n    .then(arrayBuffer => {\n      context.decodeAudioData(arrayBuffer, function(bufferedAudio) {\n        const peaks = get_peaks(sampleRate, bufferedAudio);\n        const path = build_path(peaks);\n        const elmPath = elmWave.querySelector('svg g path');\n        elmPath.setAttribute('d', path);\n        resolve();\n      }); \n    });\n  });\n  /*\n  jsmediatags.read(url, {\n    onSuccess: function(tag) {\n      console.log(tag.tags);\n    }\n  });\n  */\n}\n\nexport function sync_playart(playing) {\n  const elmPlayart = Elms.effect.playart;\n  if (playing) {\n    elmPlayart.classList.add('hide');\n  } else {\n    elmPlayart.classList.remove('hide');\n  }\n}\n\nexport function load_playart(item) {\n  const elmPlayart = Elms.effect.playart;\n  const elmCover = get_elm('workart', elmPlayart);\n  if (!item || !item.artwork) {\n    elmCover.style.backgroundImage = '';\n    return; \n  }\n  elmCover.style.backgroundImage = `url(${ item.artwork })`;\n}\n","module.exports = {\n  root: null,\n  control: {\n    play: null,\n    volume: {\n      slider: null,\n      icon: null\n    },\n    root: null\n  },\n  time: {\n    current: null,\n    duration: null\n  },\n  progress: {\n    buffered: null,\n    played: null,\n    track: null\n  },\n  effect: {\n    visualizer: null,\n    wave: null,\n    playart: null\n  },\n  content: {\n    root: null,\n    tabs: null,\n    playlist: null,\n    essay: null\n  },\n  meta: {\n    root: null\n  }\n}\n\n","import { init_progress } from \"./progress\";\nimport { init_control } from \"./control\";\nimport { init_time } from \"./time\";\nimport { init_effect } from \"./effect\";\nimport { init_content } from \"./content\";\nimport { init_meta } from \"./meta\";\nimport Elms from \"./\";\n\nexport default function(options) {\n  const rootElm = options.playerWrapperElm;\n  const contentElm = options.contentElm;\n  const essayElm = options.essayElm;\n  Elms.root = rootElm; \n  Elms.content.root = options.contentElm;\n\n  init_progress();\n  init_control();\n  init_time();\n  init_effect();\n  init_content();\n  init_meta();\n}\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_meta() {\n  Elms.meta.root = get_elm('meta-container');\n}\n\nexport function sync_meta(item) {\n  const elmMeta = Elms.meta.root;\n  const elmName = get_elm('audio-name', elmMeta);\n  const elmArtist = get_elm('audio-artist', elmMeta);\n  const elmAlbum = get_elm('audio-album', elmMeta);\n  elmName.innerText = item.title || '';\n  elmArtist.innerText = item.artist || '';\n  elmAlbum.innerText = item.album || '';\n}\n","import State from \"../audio/state\";\nimport Elms from \"../elements/\";\n\nfunction template_line(o, i) {\n  return '' +\n  `<div class=\"line\" data-i=\"${ i }\">\n    <div class=\"action\">\n      <div><div class=\"play-it\"></div></div>\n      <div><div class=\"loop-it\"></div></div>\n    </div>\n    <div class=\"content\">${ o.title }</div>\n    <div class=\"audio-duration\">\n      <span>${ o.duration }</span>\n    </div>\n  </div>`\n}\n\nfunction template_list(template) {\n  return `<div id=\"playlist\"><div class=\"lines\">${ template }</div></div>`;\n}\n\nexport function build_playlist(playlist) {\n  const elmList = Elms.content.playlist;\n  const template = playlist.map((line, i)=> template_line(line, i)).join('');\n  elmList.innerHTML = template_list(template);\n}\n\nexport function sync_playlist(playing) {\n  const elmList = Elms.content.playlist;\n  if (!playing) {\n    const elmCurrent = elmList.querySelector('.current');\n    const elmIcon = elmCurrent.querySelector('.action > div > div');\n    elmIcon.classList.remove('playing');\n    elmIcon.classList.add('play-it');\n    return;\n  }\n\n  const elmLines = elmList.querySelectorAll('.line');\n  const current = State.playlist.index;\n  for (const line of elmLines) {\n    const elmPlay = line.querySelector('.action > div > div');\n    const elmLoop = line.querySelector('.action .loop-it');\n    const index = parseInt(line.dataset.i);\n    if (index === current) {\n      line.classList.add('current');\n      elmPlay.classList.remove('play-it');\n      elmPlay.classList.add('playing');\n    } else {\n      line.classList.remove('current');\n      elmPlay.classList.remove('playing');\n      elmPlay.classList.add('play-it');\n      elmLoop.classList.remove('on');\n    }\n  }\n}\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_progress() {\n  Elms.progress.buffered = get_elm('buffered-progress');\n  Elms.progress.played = get_elm('played-progress');\n  Elms.progress.track = get_elm('progress-slider');\n}\n\nexport function sync_progress_buffered(buffered, duration) {\n  const elmBuffered = Elms.progress.buffered;\n  elmBuffered.value = parseFloat(buffered / duration);\n}\n\nexport function sync_progress_played(current, duration) {\n  const elmPlayed = Elms.progress.played;\n  const elmTrack = Elms.progress.track;\n  const max = elmPlayed.max;\n  const value = (current / duration) * max;\n  elmPlayed.value = value;\n  elmTrack.value = value * 100;\n}\n","import { get_elm } from \"../tools/elm\";\nimport { current } from \"../audio/subtitle\";\nimport State from \"../audio/state\";\nimport Elms from \"./\";\n\nexport function sync_subtitle(currentTime) {\n  const loop = State.control.loop.part.flag;\n  if (loop) {\n    return;\n  }\n\n  const elmEssay = Elms.content.essay;\n  if (!elmEssay) {\n    return;\n  }\n\n  const lines = State.audio.subtitle.list;\n  if (!(lines && lines.length)) {\n    return;\n  }\n\n  currentTime = currentTime * 1000;\n  for (let i=0; i<lines.length; i++) {\n    if (currentTime > lines[i].startTime && currentTime < lines[i].endTime) {\n      current(i);\n      break;\n    }\n  }\n}\n\nexport function sync_current(index) {\n  if (index === -1) return;\n\n  const click = State.audio.subtitle.click;\n  if (click) {\n    State.audio.subtitle.click = false;\n    return;\n  }\n\n  const elmEssay = Elms.content.essay;\n  const elmLines = elmEssay.querySelectorAll('.line');\n  const lines = State.audio.subtitle.list;\n  const line = lines[index];\n  const i = parseInt(line.index) - 1;\n  const elmCurrent = elmEssay.querySelector('.line[data-i=\"' + i + '\"]');\n\n  const elmPlay = elmEssay.querySelectorAll('.play-this');\n  elmPlay.forEach(elm => elm.classList.remove('on'));\n\n  elmLines.forEach(elm => elm.classList.remove('current'));\n  elmCurrent.classList.add('current');\n\n  const top = elmCurrent.offsetTop;\n  const viewHeight = elmEssay.clientHeight;\n  elmEssay.scrollTo({\n    behavior: 'smooth',\n    left: 0,\n    top: top - viewHeight/2\n  });\n\n  console.log(line);\n}\n\nfunction template_line(line, i) {\n  return '' +\n  `<div class=\"line\" data-i=\"${ i }\">\n    <div class=\"action\">\n      <div><div class=\"play-this\"></div></div>\n      <div><div class=\"loop-this\"></div></div>\n    </div>\n    <div class=\"content\">\n      ${ line.text }\n    </div>\n    <div class=\"audio-duration\">\n      <span>${ Math.round(((line.endTime - line.startTime) / 1000) * 10) / 10 }</span>\n    </div>\n  </div>`\n}\n\nfunction template_essay(template) {\n  return `<div id=\"essay\"><div class=\"lines\">${ template }</div></div>`;\n}\n\nexport function build_subtitle(lines) {\n  const elmEssay = Elms.content.essay;\n  const template = lines.map((line, i) => template_line(line, i)).join('');\n  elmEssay.innerHTML = template_essay(template);\n}\n\n","import { get_elm } from \"../tools/elm\";\nimport Elms from \"./\";\n\nexport function init_time() {\n  Elms.time.current = get_elm('current-time');\n  Elms.time.duration = get_elm('duration-time');\n}\n\nexport function sync_time(current, duration) {\n  const elmCurrent = Elms.time.current;\n  const elmDuration = Elms.time.duration;\n\n  const [cH, cM, cS] = current;\n  const [dH, dM, dS] = duration;\n\n  if ('00' == cH) {\n    elmCurrent.innerHTML = `<span>${cM}<span>:<span>${cS}</span>`;\n  } else {\n    elmCurrent.innerHTML = `<span>${cH}<span>:<span>${cM}</span>:<span>${cS}</span>`;\n  }\n\n  if ('00' == dH) {\n    elmDuration.innerHTML = `<span>${dM}<span>:<span>${dS}</span>`;\n  } else {\n    elmDuration.innerHTML = `<span>${dH}<span>:<span>${dM}</span>:<span>${dS}</span>`;\n  }\n}","import { sync_volume } from \"../elements/control\";\nimport { sync_effect } from \"../elements/effect\";\n\nexport default function(audio) {\n  audio.addEventListener('canplaythrough', async function() {\n    console.log('canplaythrough 1')\n    sync_volume();\n    sync_effect();\n  }, { once: true });\n\n  audio.addEventListener('canplaythrough', async function() {\n    console.log('canplaythrough 2')\n  });\n}\n","import { get_elm } from \"../../tools/elm\";\nimport { next, prev, load_default } from \"../../audio/playlist\";\nimport { play, pause, load } from \"../../audio/\";\nimport shuffle from \"../../tools/shuffle\";\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmRoot = Elms.control.root;\n  const elmPlay = Elms.control.play;\n  const elmLoop = get_elm('mode-repeat', elmRoot);\n  const elmShuffle = get_elm('mode-shuffle', elmRoot);\n  const elmNext = get_elm('next', elmRoot);\n  const elmPrev = get_elm('prev', elmRoot);\n  elmPlay.addEventListener('click', function() {\n    if (State.control.playing) {\n      pause();\n    } else {\n      play();\n    }\n  });\n  elmLoop.addEventListener('click', function() {\n    const isLoop = State.control.loop.list.flag;\n    if (isLoop) {\n      State.control.loop.list.flag = false;\n      this.classList.remove('on');\n      this.classList.add('off');\n    } else {\n      State.control.loop.list.flag = true;\n      this.classList.remove('off');\n      this.classList.add('on');\n    }\n  });\n  elmShuffle.addEventListener('click', function() {\n    const isShuffle = State.playlist.shuffle.length;\n    if (isShuffle) {\n      State.playlist.shuffle = [];\n      this.classList.remove('on');\n      this.classList.add('off');\n    } else {\n      const isPlaying = State.control.playing;\n      if (isPlaying) {\n        State.playlist.shuffle = shuffle();\n        this.classList.remove('off');\n        this.classList.add('on');\n      } else {\n        State.playlist.shuffle = shuffle();\n        this.classList.remove('off');\n        this.classList.add('on');\n        const i = State.playlist.shuffle[0];\n        State.playlist.index = i;\n        load_default(i);\n      }\n    }\n  });\n  elmNext.addEventListener('click', function() {\n    const playlist = State.playlist.value;\n    const index = next();\n    const item = playlist[index];\n    load(item);\n    State.playlist.index = index;\n    play();\n  });\n  elmPrev.addEventListener('click', function() {\n    const playlist = State.playlist.value;\n    const index = prev();\n    const item = playlist[index];\n    load(item);\n    State.playlist.index = index;\n    play();\n  });\n}\n","import { play, pause, load } from \"../../audio/\"\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmList = Elms.content.playlist;\n  const elmLines = elmList.querySelectorAll('.line');\n  const playlist = State.playlist.value;\n  for (const line of elmLines) {\n    const index = parseInt(line.dataset.i);\n    const elmPlay = line.querySelector('.action > div > div');\n    const elmLoop = line.querySelector('.action .loop-it');\n    elmPlay.addEventListener('click', function() {\n      const playing = State.control.playing;\n      const current = State.playlist.index;\n      if (index === current) {\n        if (playing) {\n          pause();\n        } else {\n          play();\n        }\n      } else {\n        const item = playlist[index];\n        load(item);\n        State.playlist.index = index;\n        play();\n      }\n    });\n    elmLoop.addEventListener('click', function() {\n      const looping = State.control.loop.whole.flag;\n      const current = State.playlist.index;\n      const playing = State.control.playing;\n      if (index === current) {\n        if (!playing) {\n          play();\n        }\n        if (looping) {\n          this.classList.remove('on');\n          State.control.loop.whole.flag = false;\n        } else {\n          this.classList.add('on');\n          State.control.loop.whole.flag = true;\n        }\n      } else {\n        const item = playlist[index];\n        load(item);\n        State.playlist.index = index;\n        this.classList.add('on');\n        State.control.loop.whole.flag = true;\n        play();\n      }\n    });\n  }\n}\n","import { sync_area_time } from \"../fn/sync\";\nimport { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmTrack = Elms.progress.track;\n  elmTrack.addEventListener('input', function() {\n    const timeStart = State.audio.duration * (this.value / 100);\n    audio.currentTime = timeStart;\n    sync_area_time(timeStart);\n  });\n}\n","import { sync_area_time } from \"../fn/sync\";\nimport { audio, play } from \"../../audio/\";\nimport Elms from \"../../elements/\";\nimport State from \"../../audio/state\";\n\nfunction play_at_here(line, isLoop) {\n  const subtitle = State.audio.subtitle.list;\n  const index = parseInt(line.dataset.i);\n  const elmEssay = Elms.content.essay;\n  const item = subtitle[index];\n  const startTime = item.startTime;\n\n  if (State.control.loop.part.flag) {\n    State.control.loop.part.flag = false;\n    State.control.loop.part.start = -1;\n    State.control.loop.part.end = -1;\n  }\n\n  if (isLoop) {\n    const elmIconLoop = line.querySelector('.action .loop-this');\n    if (elmIconLoop.classList.contains('on')) {\n      elmIconLoop.classList.remove('on');\n      return;\n    } else {\n      const endTime = item.endTime;\n      State.control.loop.part.flag = true;\n      State.control.loop.part.start = startTime;\n      State.control.loop.part.end = endTime;\n    }\n  }\n\n  const elmPlay = elmEssay.querySelectorAll('.play-this');\n  const elmLoop = elmEssay.querySelectorAll('.loop-this');\n  const elmLine = elmEssay.querySelectorAll('.line');\n  for (const elm of elmPlay) elm.classList.remove('on');\n  for (const elm of elmLoop) elm.classList.remove('on');\n  for (const elm of elmLine) elm.classList.remove('current');\n  line.classList.add('current');\n\n  if (isLoop) {\n    const elmIconLoop = line.querySelector('.action .loop-this');\n    elmIconLoop.classList.add('on');\n  } else {\n    const elmIconPlay = line.querySelector('.action .play-this');\n    elmIconPlay.classList.add('on');\n    State.audio.subtitle.click = true;\n  }\n\n  audio.currentTime = startTime / 1000;\n  sync_area_time(startTime);\n  if (!State.control.playing) {\n    play();\n  }\n}\n\nexport default function() {\n  const elmEssay = Elms.content.essay;\n  const elmLines = elmEssay.querySelectorAll('.line');\n\n  for (const line of elmLines) {\n    const elmIconPlay = line.querySelector('.action .play-this');\n    const elmIconLoop = line.querySelector('.action .loop-this');\n\n    elmIconPlay.addEventListener('click', function() {\n      play_at_here(line);\n    });\n    elmIconLoop.addEventListener('click', function() {\n      play_at_here(line, 'loop')\n    });\n  }\n}\n","import State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmContent = Elms.content.root;\n  const elmTabs = elmContent.querySelectorAll('.tabs li');\n\n  elmTabs.forEach(elm => {\n    elm.addEventListener('click', function() {\n      if (this.classList.contains('on')) {\n        return;\n      }\n      const index = this.dataset.index;\n      const elmDetails = elmContent.querySelectorAll('.frame .roll');\n      const elmDetail = elmDetails[index];\n      elmTabs.forEach(e => e.classList.remove('on'));\n      this.classList.add('on');\n      elmDetails.forEach(e => e.classList.add('hide'));\n      elmDetail.classList.remove('hide');\n    });\n  });\n}\n","import { sync_volume } from \"../../elements/control\";\nimport { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\nimport Elms from \"../../elements/\";\n\nexport default function() {\n  const elmSlider = Elms.control.volume.slider;\n  const elmIcon = Elms.control.volume.icon;\n  elmSlider.addEventListener('input', function() {\n    const value = parseInt(this.value);\n    const volume = value / 100;\n    if (value === 0) {\n      elmIcon.classList.add('muted');\n      State.control.muted = true;\n    } else {\n      elmIcon.classList.remove('muted');\n    }\n    audio.volume = volume;\n    State.control.volume = volume;\n  });\n  elmIcon.addEventListener('click', function() {\n    const muted = State.control.muted;\n    if (muted) {\n      this.classList.remove('muted');\n      State.control.muted = false;\n      const volume = State.control.volume;\n      if (volume > 0) {\n        audio.volume = volume;\n      } else {\n        audio.volume = 0.5;\n        State.control.volume = 0.5;\n        sync_volume(0.5);\n      }\n    } else {\n      this.classList.add('muted');\n      State.control.muted = true;\n      audio.volume = 0;\n    }\n  });\n}\n","import { pause, load, audio, play } from \"../audio/\";\nimport { next, is_last } from \"../audio/playlist\";\nimport State from \"../audio/state\";\n\nexport default function(audio) {\n  audio.addEventListener('ended', function() {\n    const loopList = State.control.loop.list.flag;\n    const loopWhole = State.control.loop.whole.flag;\n    const loopPart = State.control.loop.part.flag;\n    const playlist = State.playlist.value;\n    if (loopPart) return;\n    if (loopWhole) {\n      audio.currentTime = 0;\n      play();\n    } else {\n      const isLast = is_last();\n      if (isLast && !loopList) {\n        pause();\n      } else {\n        const next_index = next();\n        const item = playlist[next_index];\n        load(item);\n        State.playlist.index = next_index;\n        play();\n      }\n    }\n  });\n}\n","import { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\n\nexport function loop_detect() {\n  const current = audio.currentTime;\n  const loop = State.control.loop;\n  const { part } = loop;\n  const { flag, start, end } = part;\n\n  if (flag && -1 !== start && -1 !== end) {\n    if ((current * 1000) > end) {\n      audio.currentTime = start / 1000;\n    }\n  }\n}\n","import {\n  sync_progress_buffered,\n  sync_progress_played\n} from \"../../elements/progress\";\nimport { sync_time } from \"../../elements/time\";\nimport time_format from \"../../tools/time\";\nimport { audio } from \"../../audio/\";\nimport State from \"../../audio/state\";\n\nexport function sync_area_time(timeCurrent, timeDuration) {\n  const current = timeCurrent || audio.currentTime;\n  const duration = timeDuration || audio.duration;\n  if (isNaN(current) || isNaN(duration)) {\n    return;\n  }\n  State.audio.duration = duration;\n\n  //time elements\n  const currentTime = time_format(current);\n  const durationTime = time_format(duration);\n  sync_time(currentTime, durationTime);\n\n  //progress buffered elements\n  const last = audio.buffered.length - 1;\n  if (last >= 0) {\n    const buffered = audio.buffered.end(last);\n    sync_progress_buffered(buffered, duration);\n  }\n  sync_progress_played(current, duration);\n}\n","import elm_slider from \"./elements/slider\";\nimport elm_play from \"./elements/play\";\nimport elm_tabs from \"./elements/tabs\";\nimport elm_volume from \"./elements/volume\";\n\nimport canplaythrough from \"./canplaythrough\";\nimport progress from \"./progress\";\nimport timeupdate from \"./timeupdate\";\nimport ended from \"./ended\";\nimport vision from \"./vision\";\nimport { audio } from \"../audio\";\n\nexport default function() {\n  canplaythrough(audio); \n  timeupdate(audio);\n  progress(audio);\n  ended(audio);\n  vision(audio);\n\n  elm_slider();\n  elm_play();\n  elm_tabs();\n  elm_volume(); \n}\n\n","import { sync_area_time } from \"./fn/sync\";\n\nexport default function(audio) {\n  audio.addEventListener('progress', function() {\n    sync_area_time();\n  });\n}\n","import { sync_subtitle } from \"../elements/subtitle\";\nimport { sync_area_time } from \"./fn/sync\";\nimport { loop_detect } from \"./fn/loop\";\n\nexport default function(audio) {\n  audio.addEventListener('timeupdate', function() {\n    sync_area_time();\n    sync_subtitle(audio.currentTime);\n    loop_detect();\n  });\n}\n","import { AudioSource, Visualizer } from \"../audio/vision\";\n\nexport default function(audio) {\n  audio.addEventListener('play', function() {\n    const visualizer = new Visualizer();\n    const audioSource = new AudioSource(audio);\n    visualizer.init({\n      containerId: '.audio-visualizer',\n      audioSource: audioSource\n    });\n  }, { once: true });\n}\n\n","import init_elements from \"./elements/init\";\nimport init_events from \"./event\";\nimport { init_playlist } from \"./audio/playlist\";\n\n\nimport Elms from \"./elements/\";\nimport { play, pause } from \"./audio/\";\n\nexport default async function Player5(options) {\n  init_elements(options);\n  init_events();\n  await init_playlist(options);\n\n  console.log(Elms);\n}\n","import Elms from \"../elements/\";\n\nexport function get_elm(term, rootElm) {\n  rootElm = rootElm || Elms.root;\n  return rootElm.querySelector('.' + term)\n}\n","import State from \"../audio/state\";\n\nexport default function() {\n  const playlist = State.playlist.value;\n  const array = playlist.map((_, i) => i);\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  console.log(array);\n  return array;\n}\n","export default function(time) {\n  let seconds = Math.floor(time % 60);\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n  let minutes = Math.floor(time / 60);\n  if (minutes < 10) {\n    minutes = '0' + minutes;\n  }\n  let hours = '00';\n  if (minutes >= 60) {\n    hours = Math.floor(minutes / 60);\n    minutes = minutes % 60;\n  }\n  const intHours = parseInt(hours);\n  if (intHours > 0 && intHours < 10) {\n    hours = '0' + hours;\n  }\n  return [hours, minutes, seconds];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(892);\n"],"names":["root","factory","exports","module","define","amd","self","item","srcSubtitle","subtitle","srcAudio","url","audio","src","load","sync_meta","wave_build","then","console","log","list","State","playlist","value","index","pause","sync_playart","sync_control","sync_playlist","load_playart","control","playing","play","Audio","context","AudioContext","current","shuffle","length","isShuffle","indexOf","next","prev","i","load_default","undefined","options","playListURL","fetch","response","json","build_playlist","event_playlist","muted","volume","loop","flag","whole","start","end","part","duration","click","effect","sample","rate","sync_current","millisecond","hmsms","split","extract","lines","subtitles","forEach","line","trim","Number","isInteger","startTime","endTime","text","push","build_subtitle","res","raw_lines","txt_lines","event_subtitle","analyser","this","streamData","Uint8Array","audioCtx","mic","createMediaElementSource","createAnalyser","fftSize","connect","destination","sampleAudioStream","getByteFrequencyData","total","requestAnimationFrame","tileSize","fgCanvas","fgCtx","bgCanvas","bgCtx","sfCanvas","sfCtx","audioSource","tiles","stars","Polygon","sides","x","y","ctx","num","high","decay","highlight","step","Math","round","cos","PI","sin","vertices","prototype","rotateVertices","rotation","calculateOffset","coords","angle","atan","distance","sqrt","pow","mentalFactor","min","max","tan","offsetFactor","offsetX","offsetY","drawPolygon","r","g","b","a","bucket","ceil","val","beginPath","offset","moveTo","lineTo","closePath","cubed","e","fillStyle","fill","strokeStyle","lineWidth","stroke","drawHighlight","Star","starSize","abs","drawStar","distanceFromCentre","brightness","lengthFactor","toX","toY","speed","dX","dY","limitY","height","limitX","width","random","drawBg","clearRect","rect","grd","createRadialGradient","addColorStop","resizeCanvas","translate","layer","makePolygonArray","limit","makeStarArray","rotateForeground","tile","draw","star","init","container","document","querySelector","containerId","offsetHeight","offsetWidth","style","createElement","setAttribute","getContext","appendChild","setInterval","rootElm","Elms","content","get_elm","essay","slider","icon","elmSwitch","classList","remove","add","elmSlider","elmIcon","parseFloat","visualizer","wave","playart","elmPlayart","elmCover","artwork","backgroundImage","elmWave","sampleRate","svg","createElementNS","path","innerHTML","elmPath","Promise","resolve","reject","arrayBuffer","decodeAudioData","bufferedAudio","peaks","totalPeaks","d","peakNumber","shift","build_path","buffer","sampleSize","sampleStep","numberOfChannels","mergedPeaks","channelNumber","channelData","getChannelData","sampleIndex","get_peaks","time","progress","buffered","played","track","tabs","meta","playerWrapperElm","contentElm","essayElm","init_progress","init_control","init_time","init_effect","init_content","init_meta","elmMeta","elmName","elmArtist","elmAlbum","innerText","title","artist","album","elmList","template","map","o","template_line","join","template_list","elmLines","querySelectorAll","elmPlay","elmLoop","parseInt","dataset","elmPlayed","elmTrack","elmEssay","template_essay","elmCurrent","elm","top","offsetTop","viewHeight","clientHeight","scrollTo","behavior","left","currentTime","elmDuration","cH","cM","cS","dH","dM","dS","addEventListener","sync_volume","sync_effect","once","elmRoot","elmShuffle","elmNext","elmPrev","looping","timeStart","sync_area_time","elmIconPlay","elmIconLoop","play_at_here","isLoop","contains","elmLine","elmContent","elmTabs","elmDetails","elmDetail","loopList","loopWhole","loopPart","is_last","next_index","timeCurrent","timeDuration","isNaN","time_format","durationTime","sync_time","last","sync_progress_buffered","sync_progress_played","canplaythrough","timeupdate","ended","vision","elm_slider","elm_play","elm_tabs","elm_volume","sync_subtitle","loop_detect","Visualizer","AudioSource","init_elements","init_events","init_playlist","term","array","_","j","floor","seconds","minutes","hours","intHours","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}